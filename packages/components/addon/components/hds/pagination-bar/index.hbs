<div class="hds-pagination-bar" ...attributes>
  {{#if this.showTotalCount}}
    <Hds::PaginationBar::PaginationTotalCount
      @hasTotalItems={{this.hasTotalItems}}
      @itemsRangeStart={{this.itemsRangeStart}}
      @itemsRangeEnd={{this.itemsRangeEnd}}
      @totalItems={{@totalItems}}
    />
  {{/if}}

  <Hds::PaginationBar::Pagination
    @type={{this.type}}
    @totalPages={{this.totalPages}}
    @currentPage={{this.currentPage}}
    @pageChanged={{this.pageChanged}}
  />

  {{#if this.showPageSize}}
    <Hds::PaginationBar::PaginationPageSize />
  {{/if}}
</div>

{{!
  Allow users to navigate through a large dataset split into pages

  * *** Cursor pagination: Returns the next or previous set of records in the dataset (most)
  * Offset or page-based pagination:
    divides the dataset into pages, which basically means that by passing a certain set of parameters,
    we can get the length of the page and the number of records returned, making it possible to jump
    between pages or to any particular page.
    - "numbered" can be used only if offset pagination is implemented or supported by the backend

  TEMP ROUGH NOTES
  ------------------
  WIP Structure (some names represent sub-components, others just represent HTML/CSS structure):
    * PaginationBar
      * PaginationTotalCount (optional)

      * Pagination
        * page-prev
        * pages
          * page
            * page-link (some content aren't links though...)
        * page-next

      * PaginationPageSize (optional)

APIs
------
PaginationBar:
  X type=
    "numbered" (default)
    "compact"
  X showTotalCount ?) =
    true (default)
    false
  X showPageSize =
    true (default)
    false
  isTruncated =
    true (default ?)
    false
  X hasTotalItems=
    true (default)
    false

TotalCount:
  X hasTotalItems= (take values passed down from PaginationBar unless used as stand alone component)
    true (default)
    false

Pagination:
  X type= (take values passed down from PaginationBar unless used as stand alone component)
    "numbered" (default)
    "compact"
  isTruncated= (take values passed down from PaginationBar unless used as stand alone component)
    true (default ?)
    false
  * PageNumber:
      isSelected (NOT isCurrent) (for page number, not exposed)
      Truncated/ellipsis ? (for page number, not exposed)
  * Prev/Next buttons:
    * isDisabled (not exposed)

PageSize:
  ?
}}