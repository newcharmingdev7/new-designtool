//
// ALERT
//
// properties within each class are sorted alphabetically
//
//

.hds-alert {
  align-content: flex-start;
  display: flex;
  padding: 1rem; // 16px
}

.hds-alert__icon {
  margin-right: 0.75rem; // 12px
}

.hds-alert__text {
  color: var(--token-color-foreground-warning-on-surface);
  font-family: var(--token-typography-body-200-font-family);
  font-size: var(--token-typography-body-200-font-size);
  line-height: var(--token-typography-body-200-line-height);
}

.hds-alert__title {
  font-weight: var(--token-typography-font-weight-semibold);
}

.hds-alert__description {
  font-weight: var(--token-typography-font-weight-regular);
  color: var(--token-color-foreground-primary);

  .hds-alert__title + & {
    margin-top: 0.25rem; // 4px
  }

  strong {
    font-weight: var(--token-typography-font-weight-medium);
  }

  code, pre {
    font-family: var(--token-typography-font-stack-code);
  }

  // Notice: in the future this may become a "Link::Inline" component (for now we declare the styles directly here)
  a {
    color: var(--token-color-foreground-action);
    // At the moment the "focus" state is not well defined in design (the one that is in Figma does not work) so we just apply a simple color to the default outline
    outline-color: var(--token-color-focus-action-external);

    &:hover {
      color: var(--token-color-foreground-action-hover);
    }

    &:active {
      color: var(--token-color-foreground-action-active);
    }
  }
}

//
// COLOR & TYPE
//
.hds-alert--color-neutral {
  &.hds-alert--type-page {
    background-color: var(--token-color-surface-faint);
    box-shadow: 0px 1px 0px 0px var(--token-color-palette-alpha-300);
  }

  &.hds-alert--type-inline { 
    background-color: var(--token-color-surface-faint);
    border-color: var(--token-color-border-strong);
  }

  .hds-alert__icon, .hds-alert__title {
    color: var(--token-color-foreground-primary);
  }
}

.hds-alert--color-highlight {
  background-color: var(--token-color-surface-highlight);

  &.hds-alert--type-page {
    box-shadow: 0px 1px 0px 0px var(--token-color-border-highlight);
  }

  &.hds-alert--type-inline { 
    border-color: var(--token-color-border-highlight);
  }

  .hds-alert__icon, .hds-alert__title {
    color: var(--token-color-foreground-highlight-on-surface);
  }
}

.hds-alert--color-success {
  background-color: var(--token-color-surface-success);
  
  &.hds-alert--type-page {
    box-shadow: 0px 1px 0px 0px var(--token-color-border-success);
  }

  &.hds-alert--type-inline { 
    border-color: var(--token-color-border-success);
  }
  
  .hds-alert__icon, .hds-alert__title {
    color: var(--token-color-foreground-success-on-surface);
  }
}

.hds-alert--color-warning {
  background-color: var(--token-color-surface-warning);

  &.hds-alert--type-page {
    box-shadow: 0px 1px 0px 0px var(--token-color-border-warning);
  }

  &.hds-alert--type-inline { 
    border-color: var(--token-color-border-warning);
  }

  .hds-alert__icon, .hds-alert__title {
    color: var(--token-color-foreground-warning-on-surface);
  }
}

.hds-alert--color-critical {
  background-color: var(--token-color-surface-critical);

  &.hds-alert--type-page {
    box-shadow: 0px 1px 0px 0px var(--token-color-border-critical);
  }

  &.hds-alert--type-inline { 
    border-color: var(--token-color-border-critical);
  }

  .hds-alert__icon, .hds-alert__title {
    color: var(--token-color-foreground-critical-on-surface);
  } 
}

.hds-alert--type-inline {
  border-width: 1px;
  border-style: solid;
  border-radius: 6px;
}

//
// ACTIONS
//
.hds-alert__actions {
  align-items: center;
  display: flex;
  margin-top: 1rem; // 16px

  > * + * {
    margin-left: 1rem; // 16px
  }

  &:empty {
    display: none;
  }
}
