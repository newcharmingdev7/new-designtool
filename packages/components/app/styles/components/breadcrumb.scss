//
// BREADCRUMB
//
// properties within each class are sorted alphabetically
//
//

@use "../mixins/focus-ring" as *;

$hds-breadcrumb-item-height: 28px;
$hds-breadcrumb-item-border-radius: 5px;
$hds-breadcrumb-item-visual-horizontal-padding: 4px;

// MAIN CONTAINER (NAV)
.hds-breadcrumb {
    position: relative;
}

// LIST (OL)

.hds-breadcrumb__list {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;

    .hds-breadcrumb--items-can-wrap & {
        flex-wrap: wrap;
    }
}

.hds-breadcrumb__sublist {
    list-style: none;
    margin: 0;
    padding: 0;
}

// ITEM (LI)

.hds-breadcrumb__item {
    align-items: center;
    display: flex;
    flex-direction: row;
    min-width: 0;
    position: relative;

    .hds-breadcrumb__list > & {
        &:not(:last-child)::after {
            color: var(--token-color-palette-neutral-300);
            content: "/";
            padding: 0 8px;
        }
    }

    .hds-breadcrumb__sublist > & {
        &:not(:last-child) {
            border-bottom: 1px solid var(--token-color-palette-neutral-200);
            margin-bottom: 2px;
            padding-bottom: 2px;
        }
    }
}

.hds-breadcrumb__item--is-truncation {
    flex: none; // needed to avoid that the "flex" parent collapses the truncation element (it happens with very long strings and no-wrapping)
}

// LINK (A)

.hds-breadcrumb__link {
    align-items: center;
    border-radius: $hds-breadcrumb-item-border-radius;
    color: var(--token-color-neutral-foreground-faint);
    display: flex;
    flex-direction: row;
    margin: 0 (-$hds-breadcrumb-item-visual-horizontal-padding); // we use a negative horizontal margin to counter-balance the horizonal padding (used to shift the focus from the content)
    min-width: 0;
    padding: 0 $hds-breadcrumb-item-visual-horizontal-padding;
    // notice: the text decoration is applied directly to the "text" container because of a bug in Safari (see https://github.com/hashicorp/design-system-components/issues/159)
    text-decoration-color: transparent;

    // we apply the focus directly to the element, without using a pseudo-element
    @include hds-focus-ring-basic();

    &:hover,
    &.is-hover {
        color: var(--token-color-palette-neutral-600);

        > .hds-breadcrumb__text {
            text-decoration-color: currentColor;
        }
    }

    &:active,
    &.is-active {
        color: var(--token-color-foreground-secondary);

        > .hds-breadcrumb__text {
            text-decoration-color: currentColor;
        }
    }
}

// CURRENT

.hds-breadcrumb__current {
    align-items: center;
    color: var(--token-color-neutral-foreground-primary);
    display: flex;
    flex-direction: row;
    margin: 0 (-$hds-breadcrumb-item-visual-horizontal-padding); // we use a negative horizontal margin to counter-balance the horizonal padding (used to shift the focus from the content)
    min-width: 0;
    padding: 0 $hds-breadcrumb-item-visual-horizontal-padding;
}

// SUB-ELEMENTS

.hds-breadcrumb__icon {
    flex: none;
    margin-right: 6px;
    height: 13px;
    width: 13px;
}

.hds-breadcrumb__text {
    font-family: var(--token-typography-font-stack-text);
    font-size: 0.8125rem; // 13px
    line-height: $hds-breadcrumb-item-height; // we want to match the height of the item
    overflow: hidden;
    text-decoration: underline;
    text-decoration-color: transparent;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.hds-breadcrumb__extra {
    align-items: center;
    display: flex;
    flex: none;
    height: $hds-breadcrumb-item-height;
    margin-left: 4px;
    overflow: visible;

    // TODO necessary until we figure out if we can do a conditional in the HBS file
    // UPDATE: doesn't work because Ember adds an empty comment ¯\_(ツ)_/¯
    &:empty{
        display: none;
    }
}

// TRUNCATION

.hds-breadcrumb__truncation-toggle {
    align-items: center;
    background-color: transparent;
    border: none;
    border-radius: $hds-breadcrumb-item-border-radius;
    color: var(--token-color-neutral-foreground-faint);
    cursor: pointer;
    display: flex;
    flex: none;
    height: $hds-breadcrumb-item-height;
    justify-content: center;
    margin: 0 (-$hds-breadcrumb-item-visual-horizontal-padding); // the horizontal negative margin applied here is for visual balance of the spacing between items
    outline: none; // TODO check with @melanie
    padding: 0;
    width: 36px; // by design

    // we apply the focus directly to the element, without using a pseudo-element
    @include hds-focus-ring-basic();

    &:hover,
    &.is-hover {
        background-color: var(--token-color-neutral-background-secondary);
        color: var(--token-color-foreground-faint);
    }
    &:active,
    &.is-active {
        background-color: var(--token-color-palette-neutral-200);
        color: var(--token-color-neutral-foreground-secondary);
    }
    &:focus,
    &.is-focus {
        background-color: transparent;
    }
}

.hds-breadcrumb__truncation-content {
    background-color: #FFF;
    border-radius: 6px;
    box-shadow: var(--token-surface-high-box-shadow);
    left: -$hds-breadcrumb-item-visual-horizontal-padding;
    margin-top: 4px;
    padding: 8px 16px;
    position: absolute;
    top: 100%;
    z-index: 300; // this is the z-index used in Structure for this kind of things, I am reusing the same value
}
