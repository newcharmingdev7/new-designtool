//
// FORM > TOGGLE
//
// properties within each class are sorted alphabetically
//


// "BASE" CONTROL

.hds-form-toggle {
  display: inline-block; // we emulate the behaviour of a checkbox/radiobutton control
  isolation: isolate; // used to create a new stacking context
  position: relative;
}

// control (hidden)

.hds-form-toggle__control {
  appearance: none;
  background-color: transparent;
  border: none;
  bottom: 0;
  color: transparent;
  cursor: pointer;
  display: block;
  height: 100%;
  left: 0;
  margin: 0;
  opacity: 0;
  outline: none;
  padding: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 1;

  &:disabled {
    cursor: not-allowed;
  }
}

// facade (visible)

.hds-form-toggle__facade {
  // notice: the "tick" color is hardcoded here!
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 12 12' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M9.78033 3.21967C10.0732 3.51256 10.0732 3.98744 9.78033 4.28033L5.28033 8.78033C4.98744 9.07322 4.51256 9.07322 4.21967 8.78033L2.21967 6.78033C1.92678 6.48744 1.92678 6.01256 2.21967 5.71967C2.51256 5.42678 2.98744 5.42678 3.28033 5.71967L4.75 7.18934L8.71967 3.21967C9.01256 2.92678 9.48744 2.92678 9.78033 3.21967Z' fill='%23FFF'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: 2px 50%;
  background-size: 12px 12px;
  border-radius: calc(var(--token-form-toggle-height) / 2);
  // notice: we want to share the border color between the "thumb" and the "track" so we use a local CSS prop for this
  border: var(--token-form-radio-border-width) solid var(--border-color);
  display: block;
  height: var(--token-form-toggle-height);
  position: relative;
  width: var(--token-form-toggle-width);

  @media (prefers-reduced-motion: no-preference) {
    transition-property: all;
    transition-duration: var(--token-form-toggle-transition-duration);
    transition-timing-function: var(--token-form-toggle-transition-timing-function);
  }

  // used for the "thumb"

  &::after {
    background-color: var(--token-form-control-base-surface-color-default);
    border-radius: 50%;
    border: var(--token-form-radio-border-width) solid var(--border-color);
    width: var(--token-form-toggle-thumb-size);
    height: var(--token-form-toggle-thumb-size);
    content: '';
    left: calc(var(--token-form-radio-border-width) * -1);
    position: absolute;
    transform: translate3d(0, 0, 0);
    top: calc(var(--token-form-radio-border-width) * -1);;

    @media (prefers-reduced-motion: no-preference) {
      transition-property: all;
      transition-duration: var(--token-form-toggle-transition-duration);
      transition-timing-function: var(--token-form-toggle-transition-timing-function);
    }
  }

  // used for the focus

  &::before {
    // notice: to avoid too many nested calc() operation, we have decided to compute directly the values in Sass
    $outline-width: 3px;
    $outline-offset: 1px;
    $shift: $outline-width + $outline-offset + 1px; // here 1px refers to "--token-form-radio-border-width"
    border-radius: calc(var(--token-form-toggle-height) / 2 + $outline-width + $outline-offset);
    border-width: $outline-width;
    bottom: -$shift;
    content: "";
    left: -$shift;
    margin: auto;
    position: absolute;
    right: -$shift;
    top: -$shift;
  }

  // STATUS

  // base (default)

  :not(:checked) + & {
    --border-color: var(--token-form-control-base-border-color-default);
    background-color: var(--token-color-surface-strong); // not like the other controls!
  }
  :checked + & {
    --border-color: var(--token-form-control-checked-border-color-default);
    background-color: var(--token-form-control-checked-surface-color-default);

    &::after {
      $translation: calc(var(--token-form-toggle-width) - var(--token-form-toggle-thumb-size));
      transform: translate3d($translation, 0, 0);
    }
  }

  // hover

  :hover:not(:checked) + &,
  .mock-hover:not(:checked) + & {
    --border-color: var(--token-form-control-base-border-color-hover);
  }
  :hover:checked + &,
  .mock-hover:checked + & {
    --border-color: var(--token-form-control-checked-border-color-hover);
    background-color: var(--token-form-control-checked-border-color-default);
  }

  // focus (same for all the states)

  :focus + &,
  .mock-focus + & {
    &::before {
      border-style: solid;
      border-color: var(--token-color-focus-action-external);
    }
  }

  // DISABLED

  :disabled:not(:checked) + &,
  :disabled:checked + & {
    --border-color: var(--token-form-control-disabled-border-color);
    background-color: var(--token-form-control-disabled-surface-color);
    // notice: the "tick" color is hardcoded here!
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 12 12' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M9.78033 3.21967C10.0732 3.51256 10.0732 3.98744 9.78033 4.28033L5.28033 8.78033C4.98744 9.07322 4.51256 9.07322 4.21967 8.78033L2.21967 6.78033C1.92678 6.48744 1.92678 6.01256 2.21967 5.71967C2.51256 5.42678 2.98744 5.42678 3.28033 5.71967L4.75 7.18934L8.71967 3.21967C9.01256 2.92678 9.48744 2.92678 9.78033 3.21967Z' fill='%238C909C'/%3e%3c/svg%3e");
  }
}
