//
// FORM > TEXTAREA
//
// properties within each class are sorted alphabetically
//

// "BASE" CONTROL

.hds-form-textarea {
  background-color: var(--token-form-control-base-surface-color-default);
  border: var(--token-form-control-border-width) solid var(--token-form-control-base-border-color-default);
  border-radius: var(--token-form-control-border-radius);
  box-shadow: var(--hds-elevation-inset-box-shadow);
  color: var(--token-form-control-base-foreground-value-color);
  padding: var(--token-form-control-padding);
  resize: vertical;
  width: 100%;
  max-width: 100%;

  // PLACEHOLDER

  ::placeholder {
    color: var(--token-form-control-base-foreground-placeholder-color);
  }

  // STATUS

  &:hover,
  &.mock-hover {
    border-color: var(--token-form-control-base-border-color-hover);
  }

  // focus (same for all the states)

  &:focus,
  &.mock-focus {
    border-color: var(--token-color-focus-action-internal);
    // Notice: Safari doesn't apply a rounded border
    outline: 3px solid var(--token-color-focus-action-external);
    outline-offset: 0;
  }

  // READONLY

  &:read-only {
    background-color: var(--token-form-control-readonly-surface-color);
    border-color: var(--token-form-control-disabled-border-color);
    box-shadow: none;
    color: var(--token-form-control-disabled-foreground-color);
  }

  // DISABLED

  &:disabled {
    background-color: var(--token-form-control-disabled-surface-color);
    border-color: var(--token-form-control-disabled-border-color);
    box-shadow: none;
    color: var(--token-form-control-disabled-foreground-color);
    cursor: not-allowed;
  }

  // INVALID

  &.hds-form-textarea--is-invalid {
    border-color: var(--token-form-control-invalid-border-color-default);

    &:hover,
    &.mock-hover {
      border-color: var(--token-form-control-invalid-border-color-hover);
    }

    &:focus,
    &.mock-focus {
      border-color: var(--token-color-focus-critical-internal);
      outline-color: var(--token-color-focus-critical-external);
    }
  }
}
