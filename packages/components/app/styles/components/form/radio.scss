//
// FORM > RADIO
//
// properties within each class are sorted alphabetically
//

$hds-form-radio-control-size: 16px;

// "BASE" CONTROL

.hds-form-radio {
  appearance: none;
  background-position: center center;
  background-size: 12px 12px;
  border-radius: 50%;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  height: $hds-form-radio-control-size;
  margin: 0;
  padding: 0;
  width: $hds-form-radio-control-size;

  // STATUS

  // base (default)

  &:not(:checked) {
    background-color: var(--token-color-surface-primary);
    border-color: var(--token-color-palette-neutral-400);
    box-shadow: var(--hds-elevation-inset-box-shadow);
  }
  &:checked {
    background-color: var(--token-color-palette-blue-200);
    border-color: var(--token-color-palette-blue-300);
    // notice: the "dot" color is hardcoded here!
    background-image: url("data:image/svg+xml,%3csvg width='12' height='12' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='6' cy='6' r='2.5' fill='%23ffffff'/%3e%3c/svg%3e");
  }

  // hover

  &:hover:not(:checked),
  &.mock-hover:not(:checked) {
    border-color: var(--token-color-palette-neutral-500);
  }
  &:hover:checked,
  &.mock-hover:checked {
    background-color: var(--token-color-palette-blue-300);
    border-color: var(--token-color-palette-blue-400);
  }

  // focus (same for all the states)
  &:focus:not(:checked),
  &:focus:checked,
  &.mock-focus:checked,
  &.mock-focus:not(:checked) {
    border-color: var(--token-color-palette-blue-400);
    outline: 3px solid var(--token-color-focus-action-external);
    outline-offset: 1px;
  }

  // active

  &:active:not(:checked),
  &.mock-active:not(:checked),
  &:active:checked,
  &.mock-active:checked {
    background-color: var(--token-color-palette-blue-400);
    border-color: var(--token-color-palette-blue-400);
  }

  // INVALID

  &.hds-form-radio--is-invalid:not(:checked) {
    border-color: var(--token-color-palette-red-300);
  }
  &.hds-form-radio--is-invalid:checked {
    background-color: var(--token-color-palette-red-200);
    border-color: var(--token-color-palette-red-300);
  }

  &.hds-form-radio--is-invalid:hover:not(:checked),
  &.hds-form-radio--is-invalid.mock-hover:not(:checked) {
    border-color: var(--token-color-palette-red-400);
  }
  &.hds-form-radio--is-invalid:hover:checked,
  &.hds-form-radio--is-invalid.mock-hover:checked {
    background-color: var(--token-color-palette-red-300);
    border-color: var(--token-color-palette-red-400);
  }

  // TODO add handling of focus-visible
  &.hds-form-radio--is-invalid:focus:not(:checked),
  &.hds-form-radio--is-invalid.mock-focus:not(:checked),
  &.hds-form-radio--is-invalid:focus:checked,
  &.hds-form-radio--is-invalid.mock-focus:checked {
    border-color: var(--token-color-focus-critical-internal);
    outline-color: var(--token-color-focus-critical-external);
  }

  &.hds-form-radio--is-invalid:active:not(:checked),
  &.hds-form-radio--is-invalid.mock-active:not(:checked),
  &.hds-form-radio--is-invalid:active:checked,
  &.hds-form-radio--is-invalid.mock-active:checked {
    background-color: var(--token-color-palette-red-400);
    border-color: var(--token-color-palette-red-400);
  }

  // DISABLED

  &:disabled:not(:checked),
  &.hds-form-checkbox--is-invalid:disabled:not(:checked) {
    background-color: var(--token-color-surface-strong);
    border-color: var(--token-color-border-primary);
    box-shadow: none;
    cursor: not-allowed;
  }
  &:disabled:checked,
  &.hds-form-checkbox--is-invalid:disabled:checked {
    background-color: var(--token-color-surface-strong);
    border-color: var(--token-color-border-primary);
    box-shadow: none;
    // notice: the "dot" color is hardcoded here!
    background-image: url("data:image/svg+xml,%3csvg width='12' height='12' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='6' cy='6' r='2.5' fill='%23656a76'/%3e%3c/svg%3e");
    cursor: not-allowed;
  }
}
