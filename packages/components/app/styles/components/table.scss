//
// TABLE
//
//
$hds-table-border-radius: 6px;
$hds-table-border-width: 1px;
$hds-table-inner-border-radius: $hds-table-border-radius - $hds-table-border-width;
$hds-table-border-color: var(--token-color-border-primary);
$hds-table-header-height: 48px;
$hds-table-cell-padding-medium: 12px 16px;
$hds-table-cell-padding-short: 4px 16px;
$hds-table-cell-padding-tall: 20px 16px;

.hds-table {
  width: 100%;
  font-size: var(--token-typography-body-200-font-size);
  font-family: var(--token-typography-font-stack-text);
  line-height: var(--token-typography-body-200-line-height);
  table-layout: fixed;
  border: $hds-table-border-width solid $hds-table-border-color;
  border-radius: $hds-table-border-radius;
  border-spacing: 0;
}

// TABLE HEADER
.hds-table__thead {
  .hds-table__tr {
    color: var(--token-color-foreground-strong);
    background-color: var(--token-color-surface-strong);

    .hds-table__th,
    .hds-table__th-sort {
      height: $hds-table-header-height;
      text-align: left;
      border-top: none;
      border-right: none;
      border-bottom: $hds-table-border-width solid $hds-table-border-color;
      border-left: none;
    }

    .hds-table__th {
      padding: $hds-table-cell-padding-medium;
    }

    .hds-table__th-sort {
      padding: 0;

      button {
        width: 100%;
        min-height: $hds-table-header-height;
        margin: 0;
        padding: $hds-table-cell-padding-medium;
        text-align: inherit;
        background-color: transparent;
        border: 1px solid transparent;
        border-radius: inherit;

        .hds-table__th-sort--button-content {
          display: flex; // we can't put flex on the button itself so we drop the content into its own container
          align-self: center;
          min-height: fit-content;
          padding: 0;
          text-align: inherit;
          background-color: transparent;

          span {
            max-width: calc(100% - 32px); // It didn't work very well until 32px (theoretically it should have worked with icon (16px) + margin-left of icon (8px)) -- maybe someone has a more logical reasoning for this?
          }

          .flight-icon {
            display: inline-flex;
            align-self: center;
            margin-left: 8px;
            color: var(--token-color-foreground-action);
            vertical-align: middle; // we can't use display flex on the button, so we have to align the icon itself instead.
          }
        }

        &:hover {
          color: var(--token-color-foreground-strong);
          background-color: var(--token-color-palette-neutral-200);
          cursor: pointer;
        }

        &:focus,
        &:focus-visible { // using the mixin doesn't work for this one, so we copy the styles
          border: 1px solid var(--token-color-focus-action-external);
          outline: 0;
          box-shadow: inset 0 0 0 1px var(--token-color-focus-action-internal), 0 0 0 3px var(--token-color-focus-action-external);
        }

        &:active {
          color: var(--token-color-foreground-strong);
          background-color: var(--token-color-palette-neutral-300);
        }
      }
    }

    // BORDER RADIUS: TARGET FIRST AND LAST TH ELEMENTS IN THE ROW
    &:first-of-type {
      th:first-child {
        border-top-left-radius: $hds-table-inner-border-radius;
      }

      // LAST TH IN THE ROW, BORDER RADIUS
      th:last-child {
        border-top-right-radius: $hds-table-inner-border-radius;
      }
    }
  }
}

// TABLE BODY

// TABLE STRIPING ROWS
.hds-table--striped {
  .hds-table__tbody {
    .hds-table__tr:nth-child(even) {
      background-color: var(--token-color-surface-faint);
    }
  }
}

// TABLE DENSITY (TBODY ROW HEIGHT)
.hds-table--density-short .hds-table__tbody td {
  padding: $hds-table-cell-padding-short;
}

.hds-table--density-medium .hds-table__tbody td {
  padding: $hds-table-cell-padding-medium;
}

.hds-table--density-tall .hds-table__tbody td {
  padding: $hds-table-cell-padding-tall;
}

.hds-table__tbody {
  .hds-table__tr {
    color: var(--token-color-foreground-primary);
    font-weight: var(--token-typography-font-weight-regular);
    background-color: var(--token-color-surface-primary);


    td {
      vertical-align: top; // this is so the text will automatically vertically align to the top of the cell if one of the cells has multiple lines of text; otherwise everything will center align (vertically)
      border-top: none;
      border-right: none;
      border-bottom: $hds-table-border-width solid $hds-table-border-color;
      border-left: none;
    }

    // BORDER RADIUS: TARGET FIRST AND LAST TD ELEMENTS IN THE LAST ROW
    &:last-of-type {
      td {
        border-bottom: none;
      }

      td:first-child {
        border-bottom-left-radius: $hds-table-inner-border-radius;
      }

      td:last-child {
        border-bottom-right-radius: $hds-table-inner-border-radius;
      }
    }
  }
}
