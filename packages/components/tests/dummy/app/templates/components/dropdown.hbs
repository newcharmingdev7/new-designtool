{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Dropdown Component"}}

<h2 class="dummy-h2">Dropdown Component</h2>

<section data-test-percy>

  <h4 class="dummy-h4">Toggles</h4>

  <h5 class="dummy-h5">Toggle::Button</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="primary">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" />
    </SF.Item>
    <SF.Item @label="secondary">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @color="secondary" />
    </SF.Item>
  </Shw::Sample::Flex>
  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="primary small">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @size="small" />
    </SF.Item>
    <SF.Item @label="secondary small">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @size="small" @color="secondary" />
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Toggle::Icon</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="with icon + chevron">
      <Hds::Dropdown::Toggle::Icon @icon="user" @text="user menu" />
    </SF.Item>
    <SF.Item @label="icon only">
      <Hds::Dropdown::Toggle::Icon @icon="more-horizontal" @hasChevron={{false}} @text="overflow menu" />
    </SF.Item>
    <SF.Item @label="with image (avatar)">
      <Hds::Dropdown::Toggle::Icon @imageSrc="/assets/images/avatar.png" @text="user menu" />
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">States</h5>

  <Shw::Sample::Grid @columns="5" as |SG|>
    {{#each @model.TOGGLE_BUTTON_COLORS as |color|}}
      {{#each @model.TOGGLE_STATES as |state|}}
        <SG.Item @label="{{color}}/{{state}}">
          <Hds::Dropdown::Toggle::Button @text={{capitalize state}} @color={{color}} mock-state-value={{state}} />
        </SG.Item>
      {{/each}}
      <SG.Item @label="{{color}}/open">
        <Hds::Dropdown::Toggle::Button @text="Opened" @isOpen={{true}} @color={{color}} />
      </SG.Item>
    {{/each}}

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="icon/{{state}}">
        <Hds::Dropdown::Toggle::Icon
          @icon="more-horizontal"
          @text="overflow menu"
          @hasChevron={{false}}
          mock-state-value={{state}}
        />
      </SG.Item>
    {{/each}}
    <SG.Item @label="icon/open">
      <Hds::Dropdown::Toggle::Icon
        @icon="more-horizontal"
        @text="overflow menu"
        @hasChevron={{false}}
        @isOpen={{true}}
      />
    </SG.Item>

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="icon+chevron/{{state}}">
        <Hds::Dropdown::Toggle::Icon @icon="user" @text={{state}} mock-state-value={{state}} />
      </SG.Item>
    {{/each}}
    <SG.Item @label="icon+chevron/open">
      <Hds::Dropdown::Toggle::Icon @icon="user" @text="open" @isOpen={{true}} />
    </SG.Item>

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="avatar+chevron/{{state}}">
        <Hds::Dropdown::Toggle::Icon @text={{state}} @imageSrc="/assets/images/avatar.png" mock-state-value={{state}} />
      </SG.Item>
    {{/each}}
    <SG.Item @label="avatar+chevron/open">
      <Hds::Dropdown::Toggle::Icon @text="open" @isOpen={{true}} @imageSrc="/assets/images/avatar.png" />
    </SG.Item>
  </Shw::Sample::Grid>

  <Shw::Divider />

  <h4 class="dummy-h4">List Items</h4>

  <h5 class="dummy-h5">Title / Description / Separator</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="default (min width)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Title @text="A simple title" />
        <Hds::Dropdown::ListItem::Description @text="A description." />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive @route="index" @text="Item" />
      </ul>
    </SF.Item>
    <SF.Item @label="default (max width)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Title
          @text="A longer title that could span multiple lines if the characters surpass a certain length"
        />
        <Hds::Dropdown::ListItem::Description
          @text="A longer description that could span on multiple lines if the number of characters require more width than the dropdown provides by default."
        />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive
          @route="index"
          @text="A longer item that could span multiple lines if the characters surpass a certain length"
        />
      </ul>
    </SF.Item>
    <SF.Item @label="fixed width">
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::Title
          @text="A longer title that could span multiple lines if the characters surpass a certain length"
        />
        <Hds::Dropdown::ListItem::Description
          @text="A longer description that could span on multiple lines if the number of characters require more width than the dropdown provides by default."
        />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive
          @route="index"
          @text="A longer item that could span multiple lines if the characters surpass a certain length"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Interactive</h5>

  <h6 class="dummy-h6">Generated element</h6>

  <Shw::Sample::Flex as |SF|>
    <SF.Item>
      <Shw::Sample::Label>default ⇒ <code>&lt;button&gt;</code></Shw::Sample::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
    <SF.Item>
      <Shw::Sample::Label>with
        <code>@href</code>
        ⇒
        <code>&lt;a&gt;</code></Shw::Sample::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @href="/" @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
    <SF.Item>
      <Shw::Sample::Label>with
        <code>@route</code>
        ⇒
        <code>&lt;LinkTo&gt;</code>
        ⇒
        <code>&lt;a&gt;</code></Shw::Sample::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @route="components.dropdown" @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
  </Shw::Sample::Flex>

  <h6 class="dummy-h6">Colors</h6>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="action (default)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @icon="settings" @text="Lorem ipsum dolor" @color="action" />
      </ul>
    </SF.Item>
    <SF.Item @label="critical">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @icon="trash" @text="Lorem ipsum dolor" @color="critical" />
      </ul>
    </SF.Item>
  </Shw::Sample::Flex>

  <h6 class="dummy-h6">States (in each color)</h6>

  {{#each @model.ITEM_INTERACTIVE_COLORS as |color|}}
    <Shw::Sample::Flex @direction="column" as |SF|>
      <SF.Item @label={{capitalize color}}>
        <Shw::Sample::Flex as |SF|>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive @text={{state}} @color={{color}} mock-state-value={{state}} />
              {{/each}}
              <Hds::Dropdown::ListItem::Separator />
              <Hds::Dropdown::ListItem::Interactive @text="loading" @color={{color}} @isLoading={{true}} />
            </ul>
          </SF.Item>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive
                  @icon={{if (eq color "critical") "trash" "settings"}}
                  @text="{{state}} with icon"
                  @color={{color}}
                  mock-state-value={{state}}
                />
              {{/each}}
              <Hds::Dropdown::ListItem::Separator />
              <Hds::Dropdown::ListItem::Interactive
                @icon={{if (eq color "critical") "trash" "settings"}}
                @text="loading with icon"
                @color={{color}}
                @isLoading={{true}}
              />
            </ul>
          </SF.Item>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive
                  @icon={{if (eq color "critical") "trash" "settings"}}
                  @text="{{state}} with a longer text string that may wrap since max-width is defined on the container"
                  @color={{color}}
                  mock-state-value={{state}}
                />
              {{/each}}
            </ul>
          </SF.Item>
        </Shw::Sample::Flex>
      </SF.Item>
    </Shw::Sample::Flex>
  {{/each}}

  <h5 class="dummy-h5">Generic</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Generic>
          <Shw::Placeholder @text="some generic content here" @width="200" @height="40" @background="#e1f5fe" />
        </Hds::Dropdown::ListItem::Generic>
      </ul>
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">CopyItem</h5>

  <h6 class="dummy-h6">Content</h6>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="base">
      {{! Notice: we want to emulate the case of a fixed width list }}
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::CopyItem @text="91ee1e8ef65b337f0e70d793f456c71d" />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
    <SF.Item @label="with copyItemTitle">
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::CopyItem
          @copyItemTitle="Lorem ipsum dolor"
          @text="91ee1e8ef65b337f0e70d793f456c71d"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Sample::Flex>

  <h6 class="dummy-h6">States</h6>

  <Shw::Sample::Flex as |SF|>
    <SF.Item>
      {{! Notice: we want to emulate the case of a fixed width list }}
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::CopyItem
            @text="{{state}}: 91ee1e8ef65b337f0e70d793f456c71d"
            mock-state-value={{state}}
            mock-state-selector="button"
          />
        {{/each}}
        <Hds::Dropdown::ListItem::CopyItem
          @text="success: 91ee1e8ef65b337f0e70d793f456c71d91ee1e8ef65b337f0e70d793f456c71d91ee1e8ef65b337f0e70d793f456c71d"
          @isSuccess={{true}}
          mock-state-value="success"
          mock-state-selector="button"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Sample::Flex>

</section>