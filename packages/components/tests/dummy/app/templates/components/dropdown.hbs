{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Dropdown Component"}}

<Shw::Text::H1>Dropdown Component</Shw::Text::H1>

<section data-test-percy>

  <Shw::Text::H2>Toggles</Shw::Text::H2>

  <Shw::Text::H3>Button</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="Primary">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" />
    </SF.Item>
    <SF.Item @label="Secondary">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @color="secondary" />
    </SF.Item>
  </Shw::Flex>
  <Shw::Flex as |SF|>
    <SF.Item @label="Primary small">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @size="small" />
    </SF.Item>
    <SF.Item @label="Secondary small">
      <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @size="small" @color="secondary" />
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Icon</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="With icon + chevron">
      <Hds::Dropdown::Toggle::Icon @icon="user" @text="user menu" />
    </SF.Item>
    <SF.Item @label="Icon only">
      <Hds::Dropdown::Toggle::Icon @icon="more-horizontal" @hasChevron={{false}} @text="overflow menu" />
    </SF.Item>
    <SF.Item @label="With image (avatar)">
      <Hds::Dropdown::Toggle::Icon @imageSrc="/assets/images/avatar.png" @text="user menu" />
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>States</Shw::Text::H3>

  <Shw::Grid @columns="5" as |SG|>
    {{#each @model.TOGGLE_BUTTON_COLORS as |color|}}
      {{#each @model.TOGGLE_STATES as |state|}}
        <SG.Item @label="{{capitalize color}} / {{capitalize state}}">
          <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @color={{color}} mock-state-value={{state}} />
        </SG.Item>
      {{/each}}
      <SG.Item @label="{{color}}/open">
        <Hds::Dropdown::Toggle::Button @text="Lorem ipsum" @isOpen={{true}} @color={{color}} />
      </SG.Item>
    {{/each}}

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="Icon / {{capitalize state}}">
        <Hds::Dropdown::Toggle::Icon
          @icon="more-horizontal"
          @text="overflow menu"
          @hasChevron={{false}}
          mock-state-value={{state}}
        />
      </SG.Item>
    {{/each}}
    <SG.Item @label="Icon/open">
      <Hds::Dropdown::Toggle::Icon
        @icon="more-horizontal"
        @text="overflow menu"
        @hasChevron={{false}}
        @isOpen={{true}}
      />
    </SG.Item>

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="Icon+chevron / {{capitalize state}}">
        <Hds::Dropdown::Toggle::Icon @icon="user" @text={{state}} mock-state-value={{state}} />
      </SG.Item>
    {{/each}}
    <SG.Item @label="Icon+chevron/open">
      <Hds::Dropdown::Toggle::Icon @icon="user" @text="open" @isOpen={{true}} />
    </SG.Item>

    {{#each @model.TOGGLE_STATES as |state|}}
      <SG.Item @label="Avatar+chevron / {{capitalize state}}">
        <Hds::Dropdown::Toggle::Icon @text={{state}} @imageSrc="/assets/images/avatar.png" mock-state-value={{state}} />
      </SG.Item>
    {{/each}}
    <SG.Item @label="Avatar+chevron/open">
      <Hds::Dropdown::Toggle::Icon @text="open" @isOpen={{true}} @imageSrc="/assets/images/avatar.png" />
    </SG.Item>
  </Shw::Grid>

  <Shw::Divider />

  <Shw::Text::H2>List Items</Shw::Text::H2>

  <Shw::Text::H3>Title / Description / Separator</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="Default (min width)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Title @text="A simple title" />
        <Hds::Dropdown::ListItem::Description @text="A description." />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive @route="index" @text="Item" />
      </ul>
    </SF.Item>
    <SF.Item @label="Default (max width)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Title
          @text="A longer title that could span multiple lines if the characters surpass a certain length"
        />
        <Hds::Dropdown::ListItem::Description
          @text="A longer description that could span on multiple lines if the number of characters require more width than the dropdown provides by default."
        />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive
          @route="index"
          @text="A longer item that could span multiple lines if the characters surpass a certain length"
        />
      </ul>
    </SF.Item>
    <SF.Item @label="Fixed width">
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::Title
          @text="A longer title that could span multiple lines if the characters surpass a certain length"
        />
        <Hds::Dropdown::ListItem::Description
          @text="A longer description that could span on multiple lines if the number of characters require more width than the dropdown provides by default."
        />
        <Hds::Dropdown::ListItem::Separator />
        <Hds::Dropdown::ListItem::Interactive
          @route="index"
          @text="A longer item that could span multiple lines if the characters surpass a certain length"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Interactive</Shw::Text::H3>

  <Shw::Text::H4>Generated element</Shw::Text::H4>

  <Shw::Flex as |SF|>
    <SF.Item>
      <Shw::Label>Default ⇒ <code>&lt;button&gt;</code></Shw::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
    <SF.Item>
      <Shw::Label>With
        <code>@href</code>
        ⇒
        <code>&lt;a&gt;</code></Shw::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @href="/" @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
    <SF.Item>
      <Shw::Label>With
        <code>@route</code>
        ⇒
        <code>&lt;LinkTo&gt;</code>
        ⇒
        <code>&lt;a&gt;</code></Shw::Label>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @route="components.dropdown" @text="Lorem ipsum dolor" />
      </ul>
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H4>Colors</Shw::Text::H4>

  <Shw::Flex as |SF|>
    <SF.Item @label="Action (default)">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @icon="settings" @text="Lorem ipsum dolor" @color="action" />
      </ul>
    </SF.Item>
    <SF.Item @label="Critical">
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Interactive @icon="trash" @text="Lorem ipsum dolor" @color="critical" />
      </ul>
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H4>States (in each color)</Shw::Text::H4>

  {{#each @model.ITEM_INTERACTIVE_COLORS as |color|}}
    <Shw::Flex @direction="column" as |SF|>
      <SF.Item @label={{capitalize color}}>
        <Shw::Flex as |SF|>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive @text={{state}} @color={{color}} mock-state-value={{state}} />
              {{/each}}
              <Hds::Dropdown::ListItem::Separator />
              <Hds::Dropdown::ListItem::Interactive @text="loading" @color={{color}} @isLoading={{true}} />
            </ul>
          </SF.Item>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive
                  @icon={{if (eq color "critical") "trash" "settings"}}
                  @text="{{state}} with icon"
                  @color={{color}}
                  mock-state-value={{state}}
                />
              {{/each}}
              <Hds::Dropdown::ListItem::Separator />
              <Hds::Dropdown::ListItem::Interactive
                @icon={{if (eq color "critical") "trash" "settings"}}
                @text="loading with icon"
                @color={{color}}
                @isLoading={{true}}
              />
            </ul>
          </SF.Item>
          <SF.Item>
            <ul class="hds-dropdown-list">
              {{#each @model.ITEM_STATES as |state|}}
                <Hds::Dropdown::ListItem::Interactive
                  @icon={{if (eq color "critical") "trash" "settings"}}
                  @text="{{state}} with a longer text string that may wrap since max-width is defined on the container"
                  @color={{color}}
                  mock-state-value={{state}}
                />
              {{/each}}
            </ul>
          </SF.Item>
        </Shw::Flex>
      </SF.Item>
    </Shw::Flex>
  {{/each}}

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Generic</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item>
      <ul class="hds-dropdown-list">
        <Hds::Dropdown::ListItem::Generic>
          <Shw::Placeholder @text="some generic content here" @width="200" @height="40" @background="#e1f5fe" />
        </Hds::Dropdown::ListItem::Generic>
      </ul>
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>CopyItem</Shw::Text::H3>

  <Shw::Text::H4>Content</Shw::Text::H4>

  <Shw::Flex as |SF|>
    <SF.Item @label="Base">
      {{! Notice: we want to emulate the case of a fixed width list }}
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::CopyItem @text="91ee1e8ef65b337f0e70d793f456c71d" />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
    <SF.Item @label="With 'copyItemTitle'">
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        <Hds::Dropdown::ListItem::CopyItem
          @copyItemTitle="Lorem ipsum dolor"
          @text="91ee1e8ef65b337f0e70d793f456c71d"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H4>States</Shw::Text::H4>

  <Shw::Flex as |SF|>
    <SF.Item>
      {{! Notice: we want to emulate the case of a fixed width list }}
      {{! template-lint-disable no-inline-styles }}
      <ul class="hds-dropdown-list" style="width: 250px">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::CopyItem
            @text="{{state}}: 91ee1e8ef65b337f0e70d793f456c71d"
            mock-state-value={{state}}
            mock-state-selector="button"
          />
        {{/each}}
        <Hds::Dropdown::ListItem::CopyItem
          @text="success: 91ee1e8ef65b337f0e70d793f456c71d91ee1e8ef65b337f0e70d793f456c71d91ee1e8ef65b337f0e70d793f456c71d"
          @isSuccess={{true}}
          mock-state-value="success"
          mock-state-selector="button"
        />
      </ul>
      {{! template-lint-enable no-inline-styles }}
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Checkmark</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="Default">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Default">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}}>
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkmark mock-state-value="disabled" disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkmark>
      </ul>
    </SF.Item>
    <SF.Item @label="Selected">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Selected">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @selected={{true}}>
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkmark mock-state-value="disabled" @selected={{true}} disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkmark>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Icon">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark @icon="hexagon" mock-state-value={{state}}>
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkmark @icon="hexagon" mock-state-value="disabled" disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkmark>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon, selected">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Icon, selected">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark @icon="hexagon" mock-state-value={{state}} @selected={{true}}>
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkmark @icon="hexagon" mock-state-value="disabled" @selected={{true}} disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkmark>
      </ul>
    </SF.Item>
    <SF.Item @label="Count">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Count">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @count="12">
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Count, selected">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Count, selected">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @selected={{true}} @count="12">
            {{state}}
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Custom content">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @count="12">
            <Shw::Placeholder @text="custom content" @width="128" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content, selected">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Custom content, selected">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @selected={{true}} @count="12">
            <Shw::Placeholder @text="custom content" @width="128" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in content">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Badge in content">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}}>
            {{state}}
            <Hds::Badge @icon="org" @text="Private" @size="small" />
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in content, selected">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Badge in content, selected">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @selected={{true}}>
            {{state}}
            <Hds::Badge @icon="globe" @text="Public" @size="small" @color="highlight" />
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Large content">
      <ul class="hds-dropdown-list" role="listbox" aria-label="Large content">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkmark mock-state-value={{state}} @icon="hexagon" @selected={{true}} @count="12">
            {{state}}
            with a longer text string that may wrap since max-width is defined on the container
            <Hds::Badge @text="badge" @size="small" />
          </Hds::Dropdown::ListItem::Checkmark>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Interactive">
      <Hds::Dropdown @listPosition="left" as |dd|>
        <dd.ToggleButton @text="Checkmark" @color="secondary" />
        <dd.Checkmark @count="11">virtualbox</dd.Checkmark>
        <dd.Checkmark @count="1" @selected={{true}}>vmware</dd.Checkmark>
        <dd.Checkmark @count="10">docker</dd.Checkmark>
        <dd.Checkmark @count="0">hyperv</dd.Checkmark>
      </Hds::Dropdown>
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Checkbox</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="Default">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}}>
            {{state}}
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkbox mock-state-value="disabled" disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkbox>
      </ul>
    </SF.Item>
    <SF.Item @label="Checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} checked>
            {{state}}
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkbox mock-state-value="disabled" disabled checked>
          disabled
        </Hds::Dropdown::ListItem::Checkbox>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} @icon="hexagon">
            {{state}}
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkbox mock-state-value="disabled" @icon="hexagon" disabled>
          disabled
        </Hds::Dropdown::ListItem::Checkbox>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} @icon="hexagon" checked>
            {{state}}
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
        <Hds::Dropdown::ListItem::Checkbox mock-state-value="disabled" @icon="hexagon" disabled checked>
          disabled
        </Hds::Dropdown::ListItem::Checkbox>
      </ul>
    </SF.Item>
    <SF.Item @label="Count">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox
            mock-state-value={{state}}
            @count="12"
          >{{state}}</Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Count, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox
            mock-state-value={{state}}
            checked
            @count="12"
          >{{state}}</Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} @count="12">
            <Shw::Placeholder @text="custom content" @width="122" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} checked @count="12">
            <Shw::Placeholder @text="custom content" @width="122" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in label">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}}>
            {{state}}
            <Hds::Badge @icon="org" @text="Private" @size="small" />
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in label, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} checked>
            {{state}}
            <Hds::Badge @icon="globe" @text="Public" @size="small" @color="highlight" />
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Large content">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Checkbox mock-state-value={{state}} @count="12" @icon="hexagon">
            {{state}}
            with a longer text string that may wrap since max-width is defined on the container
            <Hds::Badge @text="badge" @size="small" />
          </Hds::Dropdown::ListItem::Checkbox>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Interactive">
      <Hds::Dropdown @listPosition="left" as |dd|>
        <dd.ToggleButton @text="Checkbox" @color="secondary" />
        <dd.Checkbox name="checkbox-item-dropdown" @count="11">virtualbox</dd.Checkbox>
        <dd.Checkbox name="checkbox-item-dropdown" @count="1" checked>vmware</dd.Checkbox>
        <dd.Checkbox name="checkbox-item-dropdown" @count="10">docker</dd.Checkbox>
        <dd.Checkbox name="checkbox-item-dropdown" @count="0">hyperv</dd.Checkbox>
      </Hds::Dropdown>
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Radio</Shw::Text::H3>

  <Shw::Flex as |SF|>
    <SF.Item @label="Default">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}}>
            {{state}}
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
        <Hds::Dropdown::ListItem::Radio mock-state-value="disabled" disabled>
          disabled
        </Hds::Dropdown::ListItem::Radio>
      </ul>
    </SF.Item>
    <SF.Item @label="Checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} checked>
            {{state}}
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
        <Hds::Dropdown::ListItem::Radio mock-state-value="disabled" checked disabled>
          disabled
        </Hds::Dropdown::ListItem::Radio>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} @icon="hexagon">
            {{state}}
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
        <Hds::Dropdown::ListItem::Radio mock-state-value="disabled" @icon="hexagon" disabled>
          disabled
        </Hds::Dropdown::ListItem::Radio>
      </ul>
    </SF.Item>
    <SF.Item @label="Icon, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} checked @icon="hexagon">
            {{state}}
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
        <Hds::Dropdown::ListItem::Radio mock-state-value="disabled" @icon="hexagon" checked disabled>
          disabled
        </Hds::Dropdown::ListItem::Radio>
      </ul>
    </SF.Item>
    <SF.Item @label="Count">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio
            mock-state-value={{state}}
            @count="12"
          >{{state}}</Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Count, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio
            mock-state-value={{state}}
            checked
            @count="12"
          >{{state}}</Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} @count="12">
            <Shw::Placeholder @text="custom content" @width="122" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Custom content, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} checked @count="12">
            <Shw::Placeholder @text="custom content" @width="122" @height="20" @background="#eee" />
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in label">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}}>
            {{state}}
            <Hds::Badge @icon="org" @text="Private" @size="small" />
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Badge in label, checked">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} checked>
            {{state}}
            <Hds::Badge @icon="globe" @text="Public" @size="small" @color="highlight" />
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Large content">
      <ul class="hds-dropdown-list">
        {{#each @model.ITEM_STATES as |state|}}
          <Hds::Dropdown::ListItem::Radio mock-state-value={{state}} @count="12" @icon="hexagon">
            {{state}}
            with a longer text string that may wrap since max-width is defined on the container
            <Hds::Badge @text="badge" @size="small" />
          </Hds::Dropdown::ListItem::Radio>
        {{/each}}
      </ul>
    </SF.Item>
    <SF.Item @label="Interactive">
      <Hds::Dropdown @listPosition="left" as |dd|>
        <dd.ToggleButton @text="Radio" @color="secondary" />
        <dd.Radio name="radio-item-dropdown" @count="11">virtualbox</dd.Radio>
        <dd.Radio name="radio-item-dropdown" @count="1" checked>vmware</dd.Radio>
        <dd.Radio name="radio-item-dropdown" @count="10">docker</dd.Radio>
        <dd.Radio name="radio-item-dropdown" @count="0">hyperv</dd.Radio>
      </Hds::Dropdown>
    </SF.Item>
  </Shw::Flex>
</section>