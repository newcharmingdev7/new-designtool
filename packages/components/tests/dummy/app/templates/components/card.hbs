{{page-title "Card component"}}

<h2 class="dummy-h2">Card container</h2>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-paragraph" id="component-api-card">Here is the API for the component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-card">
    <dt>level <code>enum</code></dt>
    <dd>
      <p>This controls the level of elevation ("shadow" visual effect). Acceptable values:</p>
      <ol>
        <li class="default">base</li>
        <li>mid</li>
        <li>high</li>
      </ol>
      <p><em>Notice:
          <code class="dummy-code">low</code>
          and
          <code class="dummy-code">higher</code>
          are not correct values for this component (by design).</em></p>
    </dd>
    <dt>background <code>enum</code></dt>
    <dd>
      <p>This controls the background color. Acceptable values:</p>
      <ol>
        <li class="default">neutral-0</li>
        <li>neutral-50</li>
      </ol>
      <p><em>Notice: later we may decide/need to add more colors, but for now we have found only these two use cases.</em></p>
    </dd>
    <dt>hasBorder <code>boolean</code></dt>
    <dd>
      <p>This controls if the card has a visual "edge", an external border (technically is an extra 1px shadow on top of
        the other drop shadows).</p>
      <p><em>Notice: the color of the border is pre-defined. If you need a custom border you have to wrap your content
          in an element and assign the border to it (in that case, remember to inherit the border radius).</em></p>
    </dd>
    <dt>overflow <code>enum</code></dt>
    <dd>
      <p>This controls if the main wrapper (who has a border-radius applied) has overflow = visible or hidden. We expect
        that this is needed in case part of the content (eg. a tooltip) needs to go beyond the bounding box of the card
        itself. Acceptable values:</p>
      <ol>
        <li class="default">hidden</li>
        <li>visible</li>
      </ol>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">Invocation of the component would look something like this:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Card::Container @level="mid" @hasBorder="true">[Your content here]</Hds::Card::Container>
    '
  />
  {{! prettier-ignore-end }}
</section>

<section>
  <div class="dummy-design-guidelines">
    <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">§</a>
      Design guidelines</h3>
    <p class="dummy-paragraph"><a href="https://www.figma.com/file/noyY6dUMDYjmySpHcMjhkN/?node-id=2%3A11">Figma UI Kit</a></p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/card-container-design-usage.png" alt="" role="none" />
  </div>
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">§</a> Accessibility</h3>
  <p class="dummy-paragraph">
    By default, the
    <em>Card Container</em>
    component has
    <code class="dummy-code">@overflow="hidden"</code>
    applied to it. This means you may need to handle the case in which text is truncated, to make it accessible (even
    though, this is a very unlikely situation).</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">§</a> Showcase</h3>
  <h4 class="dummy-h4">Level:</h4>
  <div class="dummy-card-base-sample">
    {{#each @model.CONTAINER_LEVELS as |level|}}
      <Hds::Card::Container @level={{level}}>
        <DummyPlaceholder @text={{level}} @width="200" @height="200" @background="transparent" />
      </Hds::Card::Container>
    {{/each}}
  </div>

  <h4 class="dummy-h4">Border:</h4>
  <div class="dummy-card-base-sample">
    {{#each @model.CONTAINER_LEVELS as |level|}}
      <Hds::Card::Container @level={{level}} @hasBorder={{true}}>
        <DummyPlaceholder @text={{level}} @width="200" @height="200" @background="transparent" />
      </Hds::Card::Container>
    {{/each}}
  </div>

  <h4 class="dummy-h4">Background:</h4>
  <div class="dummy-card-base-sample">
    {{#each @model.CONTAINER_BACKGROUNDS as |background|}}
      <Hds::Card::Container @level="mid" @hasBorder={{true}} @background={{background}}>
        <DummyPlaceholder @text={{background}} @width="200" @height="200" @background="transparent" />
      </Hds::Card::Container>
    {{/each}}
  </div>

  <h4 class="dummy-h4">Overflow:</h4>
  <div class="dummy-card-base-sample">
    <Hds::Card::Container @level="mid" @hasBorder={{true}}>
      <div class="dummy-card-overflow__wrapper-relative">
        <DummyPlaceholder @text="hidden (default)" @width="200" @height="200" @background="#e1f5fe" />
        <div class="dummy-card-overflow__content-absolute"></div>
      </div>
    </Hds::Card::Container>
    <Hds::Card::Container @level="mid" @hasBorder={{true}} @overflow="visible">
      <div class="dummy-card-overflow__wrapper-relative">
        <DummyPlaceholder @text="visible" @width="200" @height="200" @background="#e1f5fe" />
        <div class="dummy-card-overflow__content-absolute"></div>
      </div>
    </Hds::Card::Container>
  </div>
</section>