{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Accordion Component"}}

<Shw::Text::H1>Accordion</Shw::Text::H1>

<section data-test-percy>
  <Shw::Text::H2>Content</Shw::Text::H2>

  <Shw::Text::H3>Basic</Shw::Text::H3>

  <Shw::Flex {{style gap="1.5rem"}} @direction="column" as |SF|>
    <SF.Item @label="One row">
      <Hds::Accordion as |A|>
        <A.Row>
          <:toggle>Item one</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>

    <SF.Item @label="Multiple rows">
      <Hds::Accordion as |A|>
        <A.Row>
          <:toggle>Item one</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>

        <A.Row>
          <:toggle>Another item two</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>

        <A.Row>
          <:toggle>Third item</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H3>Complex</Shw::Text::H3>

  <Shw::Flex {{style gap="1.5rem"}} @direction="column" as |SF|>
    <SF.Item @label="With nested Accordions">
      <Hds::Accordion as |A|>
        <A.Row @isOpen={{true}}>
          <:toggle>Item one</:toggle>
          <:content>
            <Hds::Accordion>
              <Hds::Accordion::Row>
                <:toggle>Item one nested</:toggle>
                <:content>
                  <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
                </:content>
              </Hds::Accordion::Row>
            </Hds::Accordion>
          </:content>
        </A.Row>

        <A.Row @isOpen={{true}}>
          <:toggle>Another item two</:toggle>
          <:content>
            <Hds::Accordion>
              <Hds::Accordion::Row>
                <:toggle>Item one nested</:toggle>
                <:content>
                  <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
                </:content>
              </Hds::Accordion::Row>
              <Hds::Accordion::Row>
                <:toggle>Item two nested</:toggle>
                <:content>
                  <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
                </:content>
              </Hds::Accordion::Row>
            </Hds::Accordion>
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>

    <SF.Item @label="With rich content in toggle (HTML header tag)">
      <Hds::Accordion as |A|>
        <A.Row>
          <:toggle>
            <h4 class="hds-typography-display-300">Header tag example</h4>
          </:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>

    <SF.Item @label="With rich content in toggle (Alert) and containing a table">
      <Hds::Accordion as |A|>
        <A.Row @isOpen={{true}}>
          <:toggle>
            <Hds::Alert @type="compact" @color="success" as |A|>
              <A.Title>Title</A.Title>
              <A.Description>Plan finished <small>22 days ago</small></A.Description>
            </Hds::Alert>
          </:toggle>
          <:content>
            <p class="hds-typography-body-200">
              <strong>Queued:</strong>
              9 days ago >
              <strong>Finished:</strong>
              9 days ago
            </p>
            <Hds::Table @caption="Example table">
              <:head as |H|>
                <H.Tr>
                  <H.Th>Name</H.Th>
                  <H.Th>Type</H.Th>
                  <H.Th>Value</H.Th>
                </H.Tr>
              </:head>
              <:body as |B|>
                <B.Tr>
                  <B.Td>Cell one A</B.Td>
                  <B.Td>Cell two A</B.Td>
                  <B.Td>Cell three A</B.Td>
                </B.Tr>
                <B.Tr>
                  <B.Td>Cell one B</B.Td>
                  <B.Td>Cell two B</B.Td>
                  <B.Td>Cell three B</B.Td>
                </B.Tr>
              </:body>
            </Hds::Table>
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H3>Edge cases</Shw::Text::H3>

  <Shw::Flex {{style gap="1.5rem"}} @direction="column" as |SF|>
    <SF.Item @label="With long content in toggle which wraps">
      <Hds::Accordion as |A|>
        <A.Row>
          <:toggle>
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero culpa expedita assumenda at nisi minus unde
            fuga iure suscipit aut qui, odit natus eum voluptates ut molestiae! Perferendis, impedit qui? Lorem ipsum
            dolor sit amet consectetur adipisicing elit. Libero culpa expedita assumenda at nisi minus unde fuga iure
            suscipit aut qui, odit natus eum voluptates ut molestiae! Perferendis, impedit qui?
          </:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H2>States</Shw::Text::H2>

  <Shw::Flex {{style gap="1.5rem"}} @direction="column" as |SF|>
    {{#each @model.STATES as |state|}}
      <SF.Item @label={{state}}>
        <Hds::Accordion as |A|>
          <A.Row mock-state-value={{state}}>
            <:toggle>Item one</:toggle>
            <:content>
              <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
            </:content>
          </A.Row>
        </Hds::Accordion>
      </SF.Item>
    {{/each}}
    <SF.Item @label="focus & isOpen=true">
      <Hds::Accordion as |A|>
        <A.Row mock-state-value="focus" @isOpen={{true}}>
          <:toggle>Item one</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>
  </Shw::Flex>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H2>Options</Shw::Text::H2>

  <Shw::Text::H3>isOpen</Shw::Text::H3>

  <Shw::Flex {{style gap="1.5rem"}} @direction="column" as |SF|>
    <SF.Item @label="Default, isOpen=false">
      <Hds::Accordion as |A|>
        <A.Row>
          <:toggle>Item one</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>

    <SF.Item @label="isOpen=true">
      <Hds::Accordion as |A|>
        <A.Row @isOpen={{true}}>
          <:toggle>Item one</:toggle>
          <:content>
            <Shw::Placeholder @text="generic content" @height="40" @background="#eee" />
          </:content>
        </A.Row>
      </Hds::Accordion>
    </SF.Item>
  </Shw::Flex>
</section>