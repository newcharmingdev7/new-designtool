{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Pagination Component"}}

<h2 class="dummy-h2">Pagination</h2>

<section data-test-percy class="{{if this.showHighlight 'shw-component-pagination-layout-highlight'}}">

  <button id="dummy-toggle-highlight" type="button" {{on "click" this.toggleHighlight}}>
    {{if this.showHighlight "Hide" "Show"}}
    layout highlight
  </button>

  <h4 class="dummy-h4">Pagination::Numbered</h4>

  <Shw::Sample::Flex @direction="column" as |SF|>
    <SF.Item @label="Base (default)">
      <Hds::Pagination::Numbered @totalItems={{40}} />
    </SF.Item>
    <SF.Item @label="With showTotalItems=false">
      <Hds::Pagination::Numbered @totalItems={{40}} @showTotalItems={{false}} />
    </SF.Item>
    <SF.Item @label="With showSizeSelector=false">
      <Hds::Pagination::Numbered @totalItems={{40}} @showSizeSelector={{false}} />
    </SF.Item>
    <SF.Item @label="With showInfo=false">
      <Hds::Pagination::Numbered @totalItems={{40}} @showInfo={{false}} />
    </SF.Item>
    <SF.Item @label="With showInfo=false + showSizeSelector=false">
      <Hds::Pagination::Numbered @totalItems={{40}} @showInfo={{false}} @showSizeSelector={{false}} />
    </SF.Item>
    <SF.Item @label="With @currentPageSize=30 and @currentPage=2">
      <Hds::Pagination::Numbered
        @totalItems={{40}}
        @currentPageSize={{30}}
        @currentPage={{2}}
        @pageSizes={{array 10 30 50}}
      />
    </SF.Item>
    <SF.Item @label="With @showPageNumbers=false + @showLabels=true">
      <Hds::Pagination::Numbered @totalItems={{40}} @showPageNumbers={{false}} @showLabels={{true}} />
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h6">Truncation</h5>

  <Shw::Sample::Flex @direction="column" as |SF|>
    <SF.Item @label="With large number of pages (truncated by default)">
      <Hds::Pagination::Numbered @totalItems={{100}} />
    </SF.Item>
    <SF.Item @label="With large number of pages (truncated with initial page equal to 4)">
      <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{4}} />
    </SF.Item>
    <SF.Item @label="With large number of pages (not truncated)">
      <Hds::Pagination::Numbered @totalItems={{100}} @isTruncated={{false}} />
    </SF.Item>
  </Shw::Sample::Flex>

  <Shw::Divider />

  <h4 class="dummy-h4">Pagination::Compact</h4>

  <Shw::Sample::Flex @direction="column" as |SF|>
    <SF.Item @label="Base (default)">
      <Hds::Pagination::Compact />
    </SF.Item>
    <SF.Item @label="With 'prev disabled">
      <Hds::Pagination::Compact @isDisabledPrev={{true}} />
    </SF.Item>
    <SF.Item @label="With @showLabels=false">
      <Hds::Pagination::Compact @showLabels={{false}} />
    </SF.Item>
  </Shw::Sample::Flex>

  <Shw::Divider />

  <h4 class="dummy-h4">Base elements</h4>

  <h5 class="dummy-h5">Pagination::Info</h5>

  <Shw::Sample::Flex @direction="column" as |SF|>
    <SF.Item @label="Base (default)">
      <Hds::Pagination::Info @itemsRangeStart={{1}} @itemsRangeEnd={{10}} @totalItems={{103}} />
    </SF.Item>
    <SF.Item @label="With @showTotalItems=false">
      <Hds::Pagination::Info
        @itemsRangeStart={{1}}
        @itemsRangeEnd={{10}}
        @totalItems={{103}}
        @showTotalItems={{false}}
      />
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Pagination::SizeSelector</h5>

  <Shw::Sample::Flex @direction="column" as |SF|>
    <SF.Item @label="Base (default)">
      <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} />
    </SF.Item>
    <SF.Item @label="With @currentPageSize (selected option)">
      <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @selectedSize={{30}} />
    </SF.Item>
    <SF.Item @label="With @label to add custom label text">
      <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @label="Items" />
    </SF.Item>
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Pagination::Nav::Arrow</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="With text label (default)">
      <Shw::Sample::Grid @columns={{2}} as |SG|>
        <SG.Item>
          <Hds::Pagination::Nav::Arrow @direction="prev" />
        </SG.Item>
        <SG.Item>
          <Hds::Pagination::Nav::Arrow @direction="next" />
        </SG.Item>
      </Shw::Sample::Grid>
    </SF.Item>
    <SF.Item @label="With @showLabel=false">
      <Shw::Sample::Grid @columns={{2}} {{style width="fit-content"}} as |SG|>
        <SG.Item>
          <Hds::Pagination::Nav::Arrow @direction="prev" @showLabel={{false}} />
        </SG.Item>
        <SG.Item>
          <Hds::Pagination::Nav::Arrow @direction="next" @showLabel={{false}} />
        </SG.Item>
      </Shw::Sample::Grid>
    </SF.Item>
  </Shw::Sample::Flex>

  <h6 class="dummy-h6">States</h6>

  <Shw::Sample::Flex @direction="column" as |SF|>
    {{#let (array "default" "hover" "active" "focus") as |states|}}
      {{#each states as |state|}}
        <SF.Item @label={{capitalize state}} mock-state-value={{state}} mock-state-selector="button,a">
          <Shw::Sample::Flex as |SF|>
            <SF.Item>
              <Hds::Pagination::Nav::Arrow @direction="prev" />
            </SF.Item>
            <SF.Item>
              <Hds::Pagination::Nav::Arrow @direction="next" />
            </SF.Item>
            <SF.Item>
              <Hds::Pagination::Nav::Arrow @direction="prev" @showLabel={{false}} />
            </SF.Item>
            <SF.Item>
              <Hds::Pagination::Nav::Arrow @direction="next" @showLabel={{false}} />
            </SF.Item>
          </Shw::Sample::Flex>
        </SF.Item>
      {{/each}}
      <SF.Item @label="Disabled">
        <Shw::Sample::Flex as |SF|>
          <SF.Item>
            <Hds::Pagination::Nav::Arrow @direction="prev" @disabled={{true}} />
          </SF.Item>
          <SF.Item>
            <Hds::Pagination::Nav::Arrow @direction="next" @disabled={{true}} />
          </SF.Item>
          <SF.Item>
            <Hds::Pagination::Nav::Arrow @direction="prev" @showLabel={{false}} @disabled={{true}} />
          </SF.Item>
          <SF.Item>
            <Hds::Pagination::Nav::Arrow @direction="next" @showLabel={{false}} @disabled={{true}} />
          </SF.Item>
        </Shw::Sample::Flex>
      </SF.Item>
    {{/let}}
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Pagination::Nav::Number</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="Generic (default)">
      <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number @page="1" /></ul>
    </SF.Item>
    <SF.Item @label="Current (with @isSelected=true)">
      <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number
          @page="1"
          @isSelected={{true}}
        /></ul>
    </SF.Item>
  </Shw::Sample::Flex>

  <h6 class="dummy-h6">States (Generic / Current - With different text lengths)</h6>

  <Shw::Sample::Flex @direction="column" as |SF|>
    {{#let (array "default" "hover" "active" "focus") as |states|}}
      {{#each states as |state|}}
        <SF.Item @label={{capitalize state}} mock-state-value={{state}} mock-state-selector="button,a">
          <Shw::Sample::Flex as |SF|>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number @page="1" /></ul>
            </SF.Item>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number @page="12" /></ul>
            </SF.Item>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number @page="123" /></ul>
            </SF.Item>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number
                  @page="1"
                  @isSelected={{true}}
                /></ul>
            </SF.Item>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number
                  @page="12"
                  @isSelected={{true}}
                /></ul>
            </SF.Item>
            <SF.Item>
              <ul class="shw-component-pagination-ul-wrapper"><Hds::Pagination::Nav::Number
                  @page="123"
                  @isSelected={{true}}
                /></ul>
            </SF.Item>
          </Shw::Sample::Flex>
        </SF.Item>
      {{/each}}
    {{/let}}
  </Shw::Sample::Flex>

  <h5 class="dummy-h5">Pagination::Nav::Ellipsis</h5>

  <Shw::Sample::Flex as |SF|>
    <SF.Item @label="Base">
      <Hds::Pagination::Nav::Ellipsis />
    </SF.Item>
  </Shw::Sample::Flex>

  <Shw::Divider />

  <h4 class="dummy-h4">Examples of paginated tables</h4>

  {{! ============================================ }}
  {{! ===== DEMO #1 - NUMBERED - WITH EVENTS ===== }}
  {{! ============================================ }}

  <h5 class="dummy-h5">Numbered - Events-based pagination</h5>

  <p class="dummy-paragraph">When using an "events-based" strategy, the status of the UI is transient, and it's not
    preserved across page reloads.</p>

  <div class="shw-component-pagination-table-demo" id="demo1-numbered-with-events">
    <Hds::Table
      @model={{this.paginatedData_demo1}}
      @columns={{array
        (hash key="id" label="ID")
        (hash key="name" label="Name")
        (hash key="email" label="Email")
        (hash key="role" label="Role")
      }}
      @density={{if (eq this.currentPageSize_demo1 30) "short" "medium"}}
    >
      <:body as |B|>
        <B.Tr>
          <B.Td>{{B.data.id}}</B.Td>
          <B.Td>{{B.data.name}}</B.Td>
          <B.Td>{{B.data.email}}</B.Td>
          <B.Td>{{B.data.role}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Numbered
      @totalItems={{this.demoTotalItems}}
      @currentPageSize={{this.currentPageSize_demo1}}
      @pageSizes={{array 5 10 30}}
      @onPageChange={{this.onPageChange_demo1}}
      @onPageSizeChange={{this.onPageSizeChange_demo1}}
    />
  </div>

  {{! ============================================= }}
  {{! ===== DEMO #2 - NUMBERED - WITH ROUTING ===== }}
  {{! ============================================= }}

  <h5 class="dummy-h5">Numbered - Routing-based pagination</h5>

  <p class="dummy-paragraph">When using a "routing-based" strategy, the status of the UI is preserved across page
    reloads using the query parameters stored in the URL.</p>

  <div class="shw-component-pagination-table-demo" id="demo2-numbered-with-routing">
    <Hds::Table
      @model={{this.paginatedData_demo2}}
      @columns={{array
        (hash key="id" label="ID" isSortable="true")
        (hash key="name" label="Name" isSortable="true")
        (hash key="email" label="Email")
        (hash key="role" label="Role")
      }}
      @sortBy={{this.currentSortBy_demo2}}
      @sortOrder={{this.currentSortOrder_demo2}}
      @onSort={{this.onTableSort_demo2}}
      @density={{if (eq this.currentPageSize_demo2 30) "short" "medium"}}
    >
      <:body as |B|>
        <B.Tr>
          <B.Td>{{B.data.id}}</B.Td>
          <B.Td>{{B.data.name}}</B.Td>
          <B.Td>{{B.data.email}}</B.Td>
          <B.Td>{{B.data.role}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Numbered
      @totalItems={{this.demoTotalItems}}
      @currentPageSize={{this.currentPageSize_demo2}}
      @pageSizes={{array 5 10 30}}
      @currentPage={{this.currentPage_demo2}}
      @route={{this.demoRouteName}}
      @queryFunction={{this.consumerQueryFunction_demo2}}
      @onPageChange={{this.genericHandlePageChange}}
      @onPageSizeChange={{this.genericHandlePageSizeChange}}
    />
  </div>

  {{! =========================================== }}
  {{! ===== DEMO #3 - COMPACT - WITH EVENTS ===== }}
  {{! =========================================== }}

  <h5 class="dummy-h5">Compact - Events-based pagination</h5>

  <p class="dummy-paragraph">When using an "events-based" strategy, the status of the UI is transient, and it's not
    preserved across page reloads.</p>

  <div class="shw-component-pagination-table-demo" id="demo3-compact-with-events">
    <Hds::Table
      @model={{this.paginatedData_demo3}}
      @columns={{array
        (hash key="id" label="ID")
        (hash key="name" label="Name")
        (hash key="email" label="Email")
        (hash key="role" label="Role")
      }}
    >
      <:body as |B|>
        <B.Tr>
          <B.Td>{{B.data.id}}</B.Td>
          <B.Td>{{B.data.name}}</B.Td>
          <B.Td>{{B.data.email}}</B.Td>
          <B.Td>{{B.data.role}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Compact
      @isDisabledPrev={{this.isDisabledPrev_demo3}}
      @isDisabledNext={{this.isDisabledNext_demo3}}
      @onPageChange={{this.onPageChange_demo3}}
    />
  </div>

  {{! ============================================ }}
  {{! ===== DEMO #4 - COMPACT - WITH ROUTING ===== }}
  {{! ============================================ }}

  {{! Notice: this demo emulates the current implementation in Cloud UI }}

  <h5 class="dummy-h5">Compact - Routing-based pagination</h5>

  <p class="dummy-paragraph">When using a "routing-based" strategy, the status of the UI is preserved across page
    reloads using the query parameters stored in the URL.</p>

  <div class="shw-component-pagination-table-demo" id="demo4-compact-with-routing">
    <Hds::Table
      @model={{this.paginatedData_demo4}}
      @columns={{array
        (hash key="id" label="ID")
        (hash key="name" label="Name")
        (hash key="email" label="Email")
        (hash key="role" label="Role")
      }}
    >
      <:body as |B|>
        <B.Tr>
          <B.Td>{{B.data.id}}</B.Td>
          <B.Td>{{B.data.name}}</B.Td>
          <B.Td>{{B.data.email}}</B.Td>
          <B.Td>{{B.data.role}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Compact
      @route={{this.demoRouteName}}
      @queryFunction={{this.consumerQueryFunction_demo4}}
      @isDisabledPrev={{this.isDisabledPrev_demo4}}
      @isDisabledNext={{this.isDisabledNext_demo4}}
      @onPageChange={{this.genericHandlePageChange}}
    />
  </div>

</section>