{{page-title "Alert component"}}

<h2 class="dummy-h2">Alerts</h2>

<section>
  <h3 class="dummy-h3">
    Overview
  </h3>

  <p class="dummy-paragraph">
    An Alert is an element that displays a brief, important message in a way that attracts the user's attention, without
    interrupting the user's task.
    <ul>
      <li class="dummy-paragraph">
        Dynamically-rendered Alerts are automatically announced by most screen readers.
      </li>
      <li class="dummy-paragraph">In some operating systems, Alerts may trigger an alert sound.</li>
    </ul>
  </p>

  <p class="dummy-paragraph">
    We currently have four types of alerts.
    <ul>
      <li class="dummy-paragraph">
        <strong>Alert (Page)</strong>,
        <strong>Alert (Inline)</strong>, and
        <strong>Alert (Compact)</strong>
        are intended for system-generated messages.
      </li>
      <li class="dummy-paragraph"><strong>Alert (Toasts)</strong> are intended for user-triggered messages.</li>
    </ul>
  </p>
</section>

<section>
  <h3 class="dummy-h3">Alert Component API</h3>
  <p class="dummy-paragraph">Here is the API for the component:</p>

  <dl class="dummy-component-props">
    <dt>type <code>enum</code></dt>
    <dd>
      <p>
        <code class="dummy-code">type</code>
        sets the type of alert.
      </p>

      <p>Acceptable values:</p>
      <ol>
        <li class="default">page</li>
        <li>inline</li>
        <li>compact</li>
        <li>toast</li>
      </ol>
    </dd>

    <dt>color <code>enum</code></dt>
    <dd>
      <p>
        <code class="dummy-code">color</code>
        sets the color scheme for background, border,
        <code class="dummy-code">title</code>, and
        <code class="dummy-code">description</code>, which
        <strong>cannot</strong>
        be overriden.
        <code class="dummy-code">color</code>
        results in a default
        <code class="dummy-code">icon</code>, which
        <strong>can</strong>
        be overriden.
      </p>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">neutral</li>
        <li>highlight</li>
        <li>success</li>
        <li>warning</li>
        <li>critical</li>
      </ol>
    </dd>

    <dt class="dummy-indent">icon <code>string</code></dt>
    <dd class="dummy-indent">
      <p>Override the default
        <code class="dummy-code">icon</code>
        name, which is determined by the
        <code class="dummy-code">color</code>. Optional parameter.
      </p>
      <p>Acceptable values:</p>
      <p>Any
        <a href="https://flight-hashicorp.vercel.app/" target="_blank" rel="noopener noreferrer">
          Flight icon</a>
        name, or pass an empty string for no icon.
      </p>
    </dd>

    <dt>title <code>string</code></dt>
    <dd>
      <p>
        The title text in the alert.
        <code class="dummy-code">title</code>
        <strong>and/or</strong>
        <code class="dummy-code">description</code>
        is required.
      </p>
    </dd>

    <dt>description <code>string</code></dt>
    <dd>
      <p>The description text in the alert.
        <code class="dummy-code">description</code>
        <strong>and/or</strong>
        <code class="dummy-code">title</code>
        is required.
      </p>
    </dd>

    <dt>onClose <code>function</code></dt>
    <p>
      The alert can be dismissed by the user. Pass in a function to display this optional parameter.
    </p>

    <dt>&lt;:actions&gt; <code>named block</code></dt>
    <dd>
      <p>Actions can optionally be passed into the alert as yielded components. The user can use the suggested
        <code class="dummy-code">HDS::Button</code>,
        <code class="dummy-code">HDS::Link::Standalone</code>, and/or
        <code class="dummy-code">HDS::LinkTo::Standalone</code>
        as yielded components. Or, the user can insert their own content to the
        <code class="dummy-code">:actions</code>
        block.
      </p>
    </dd>

    <dt>‚Äúsplattributes‚Äù</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3">How to use</h3>

  <h4 class="dummy-h4">
    Alert (Page)
  </h4>
  <p class="dummy-paragraph">
    An
    <strong>Alert (Page)</strong>
    is a rectangular alert (without a border-radius). An
    <strong>Alert (Page)</strong>
    has a bottom border. An
    <strong>Alert (Page)</strong>
    typically only has adjacent whitespace to the bottom of it, meaning it's usually flush to the parent containing div
    to its top, left, and right.
  </p>

  <h5 class="dummy-h5">
    Basic invocation of Alert (Page)
  </h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Alert @title="Title here" @description="Description here" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to the default
    <code class="dummy-code">type</code>
    of
    <code class="dummy-code">page</code>
    and
    <code class="dummy-code">color</code>
    of
    <code class="dummy-code">neutral</code>:
  </p>
  <div class="dummy-alert-docs">
    <Hds::Alert @title="Title here" @description="Description here" />
    <div class="dummy-alert-indent--x">
      <p>Rest of the page content here:</p>
      <ul>
        <li>Vault</li>
        <li>Terraform</li>
        <li>Packer</li>
        <li>&mldr;and more!</li>
      </ul>
    </div>
  </div>

  <h4 class="dummy-h4">
    Alert (Inline)
  </h4>
  <p class="dummy-paragraph">
    An
    <strong>Alert (Inline)</strong>
    is an alert with a border-radius and a border. An
    <strong>Alert (Inline)</strong>
    typically has adjacent whitespace on all four sides.
  </p>

  <h5 class="dummy-h5">
    Basic invocation of Alert (Inline)
  </h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Alert @type="inline" @title="Title here" @description="Description here" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to the default
    <code class="dummy-code">color</code>
    of
    <code class="dummy-code">neutral</code>:
  </p>
  <div class="dummy-alert-docs dummy-alert-indent">
    <Hds::Alert @type="inline" @title="Title here" @description="Description here" />

    <p>Rest of the page content here:</p>
    <ul>
      <li>Vault</li>
      <li>Terraform</li>
      <li>Packer</li>
      <li>&mldr;and more!</li>
    </ul>
  </div>

  <h4 class="dummy-h4">
    Alert (Compact)
  </h4>
  <p class="dummy-paragraph">
    An
    <strong>Alert (Compact)</strong>
    only contains an
    <strong>icon</strong>
    and
    <strong>description</strong>, with smaller proportions than the other alerts.
    <ul>
      <li class="dummy-paragraph">
        The default
        <code class="dummy-code">icon</code>
        for
        <strong>Alert (Compact)</strong>
        is different from the other alert types.
      </li>
      <li class="dummy-paragraph">
        <code class="dummy-code">icon</code>
        and
        <code class="dummy-code">description</code>
        are required for
        <strong>Alert (Compact)</strong>.
      </li>
    </ul>
  </p>

  <h5 class="dummy-h5">
    Basic invocation of Alert (Compact)
  </h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Alert @type="compact" @description="Description here" />
    '
  />
  {{! prettier-ignore-end }}

  <p class="dummy-paragraph">Renders to the default
    <code class="dummy-code">color</code>
    of
    <code class="dummy-code">neutral</code>:
  </p>
  <div class="dummy-alert-docs dummy-alert-indent">
    <Hds::Alert @type="compact" @description="Description here" />

    <p>Rest of the page content here:</p>
    <ul>
      <li>Vault</li>
      <li>Terraform</li>
      <li>Packer</li>
      <li>&mldr;and more!</li>
    </ul>
  </div>

  <h4 class="dummy-h4">
    Alert (Toast)
  </h4>
  <p class="dummy-paragraph">
    An
    <strong>Alert (Toast)</strong>
    is an alert that typically displays brief, temporary notifications.
    <strong>Alert (Toasts)</strong>
    typically disappear on their own.
    <strong>Alert (Toast)</strong>
    will need to be implemented in your app with an Ember addon such as
    <a href="https://github.com/poteto/ember-cli-flash">ember-cli-flash</a>
    to handle the placement, animation, and dismiss.
    <strong>Alert (Toast)</strong>
    has a border-radius, a border, and elevation (box-shadow).
  </p>

  <h5 class="dummy-h5">
    Basic invocation of Alert (Toast)
  </h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Alert @type="toast" @title="Title here" @description="Description here" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to the default
    <code class="dummy-code">color</code>
    of
    <code class="dummy-code">neutral</code>:
  </p>
  <Hds::Alert @type="toast" @title="Title here" @description="Description here" />

  <p class="dummy-paragraph">
    üöß TODO: Insert working Toast implementation here if desired. Other Toast recommendations may be duplicated from the
    Figma stickersheet.
  </p>
</section>

<section>
  <h3 class="dummy-h3">Design guidelines</h3>
  <p class="dummy-paragraph">üöß TODO: Insert Figma stickersheet here.</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3">Showcase</h3>

  <p class="dummy-paragraph">
    üö® Note: The compact alert is borderless, but shown with a a dotted border throughout the "Showcase" for clarity.
  </p>

  <h4 class="dummy-h4">Type</h4>
  {{#each @model.TYPES as |type|}}
    <p class="dummy-paragraph">{{capitalize type}}</p>
    <br />
    <div class="dummy-alert-sample-item--type-{{type}}">
      <Hds::Alert @type={{type}} @title={{capitalize type}} @description="Lorem ipsum dolor sit amet." />
    </div>
  {{/each}}

  <h4 class="dummy-h4">Color</h4>
  <div class="dummy-alert-sample-grid">
    {{#each @model.COLORS as |color|}}
      <p class="dummy-paragraph dummy-alert-sample-grid__title">{{capitalize color}}</p>
      {{#each @model.TYPES as |type|}}
        <div class="dummy-alert-sample-item--type-{{type}}">
          <Hds::Alert
            @type={{type}}
            @color={{color}}
            @title="{{capitalize type}} title"
            @description="This is the <em>{{type}}</em> alert with <em>{{color}}</em> color."
          />
        </div>
      {{/each}}
    {{/each}}
  </div>

  <h4 class="dummy-h4">Icon</h4>
  <div class="dummy-alert-sample-grid">
    <Hds::Alert @type="inline" @color="highlight" @title="Default icon" @description="Lorem ipsum dolor sit amet." />
    <Hds::Alert
      @type="inline"
      @color="highlight"
      @icon="meh"
      @title="With icon override"
      @description="Lorem ipsum dolor sit amet."
    />
    <Hds::Alert
      @type="inline"
      @color="highlight"
      @icon="running"
      @title="With animated icon"
      @description="Lorem ipsum dolor sit amet."
    />
    <Hds::Alert
      @type="inline"
      @color="highlight"
      @icon=""
      @title="Without icon"
      @description="Lorem ipsum dolor sit amet."
    />
  </div>

  <h4 class="dummy-h4">Content</h4>
  <div class="dummy-alert-sample-grid dummy-alert-sample-grid--wide-content">
    <Hds::Alert @type="inline" @color="success" @title="A simple title" @description="A simple description text" />
    <Hds::Alert
      @type="inline"
      @color="success"
      @title="An alert with a very long title and a long description text that should go on multiple lines"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque erat elit, lacinia at magna eget, porttitor lobortis nulla."
    />
    <Hds::Alert @type="inline" @color="success" @title="An alert with just a title and no description text." />
    <Hds::Alert @type="inline" @color="success" @description="An alert with no title and just a description text" />
    <Hds::Alert
      @type="inline"
      @color="success"
      @title="An alert with rich text description (HTML)"
      @description="The description text can support HTML tags embedded in the string value, like <strong>strong</strong> and <em>em</em> as well as <code>code</code> and <a href='#'>links</a>."
    />
    <Hds::Alert
      @type="inline"
      @color="success"
      @title="An alert with extra/custom content"
      @description="In special cases, you can pass extra content to the alert using the <code>actions</code> named block."
    >
      <:actions>
        <DummyPlaceholder @text="some generic content" @height="50" @background="#eee" />
      </:actions>
    </Hds::Alert>
  </div>

  <h4 class="dummy-h4">Actions</h4>
  <div class="dummy-alert-sample-grid dummy-alert-sample-grid--wide-content">
    <Hds::Alert
      @type="inline"
      @color="warning"
      @title="Action passed as yielded component"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    >
      <:actions as |A|>
        <A.Button @text="Action" @size="small" @color="secondary" />
      </:actions>
    </Hds::Alert>
    <Hds::Alert
      @type="inline"
      @color="warning"
      @title="With multiple actions passed as yielded components"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    >
      <:actions as |A|>
        <A.Button @text="Secondary" @size="small" @color="secondary" />
        <A.Button @icon="plus" @text="Tertiary" @size="small" @color="tertiary" />
        <A.Link::Standalone @icon="plus" @text="Standalone" href="#" @size="small" @color="secondary" />
      </:actions>
    </Hds::Alert>
    <Hds::Alert
      @type="inline"
      @color="warning"
      @title="With content yielded in the 'actions' named block"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    >
      <:actions>
        <DummyPlaceholder @text="some generic content" @height="50" @background="#eee" />
      </:actions>
    </Hds::Alert>
    <Hds::Alert
      @type="inline"
      @color="warning"
      @title="With actions and custom content in the 'actions' named block"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    >
      <:actions>
        <div>
          <div class="dummy-alert-sample-custom-actions__actions">
            <Hds::Button @text="Action" @size="small" @color="secondary" />
            <Hds::Link::Standalone @icon="plus" @text="Action" href="#" @size="small" @color="secondary" />
          </div>
          <span class="dummy-alert-sample-custom-actions__text">This for example could be extra text, specific for a
            special use case.</span>
        </div>
      </:actions>
    </Hds::Alert>
  </div>

  <h4 class="dummy-h4">Dismiss</h4>
  <div class="dummy-alert-sample-grid dummy-alert-sample-grid--wide-content">
    <Hds::Alert
      @type="inline"
      @color="critical"
      @title="Without the dismiss button (default)"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
    />
    <Hds::Alert
      @type="inline"
      @color="critical"
      @title="With the dismiss button"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
      {{! TODO: understand if we can use a generic helper - see https://hashicorp.slack.com/archives/C11JCBJTW/p1648751235987409 }}
      @onClose={{this.noop}}
    />
    <Hds::Alert
      @type="inline"
      @color="critical"
      @icon=""
      @title="With the dismiss button and no icon"
      @description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
      @onClose={{this.noop}}
    />
    <Hds::Alert
      @type="inline"
      @color="critical"
      @description="With the dismiss button and no title"
      @onClose={{this.noop}}
    />
  </div>

</section>

<section>
  <h3 class="dummy-h3">Accessibility</h3>
  <p class="dummy-paragraph">üöß TODO: Have Melanie review post-Amy transfer</p>
  <p class="dummy-paragraph">üöß TODO: Bring role change to code, if folks agree</p>
  <ul>
    <li class="dummy-paragraph">
      If
      <code class="dummy-code">color="warning"</code>
      or
      <code class="dummy-code">color="critical"</code>
      => then
      <code class="dummy-code">role="alert"</code>, as it's an important message.
    </li>
    <ul>
      <li class="dummy-paragraph">Reference:
        <a href="https://www.w3.org/TR/wai-aria-practices-1.2/#alert" target="_blank" rel="noopener noreferrer">
          WAI-ARIA Authoring Practices 1.2 (Alert)
        </a>
      </li>
    </ul>
    <li class="dummy-paragraph">
      If
      <code class="dummy-code">color="neutral"</code>,
      <code class="dummy-code">color="highlight"</code>
      or
      <code class="dummy-code">color="success"</code>
      => then
      <code class="dummy-code">role="status"</code>, as the content is advisory information for the user, but is not
      important enough to justify a
      <code class="dummy-code">role="alert"</code>. Elements with
      <code class="dummy-code">role="status"</code>
      have an implicit
      <code class="dummy-code">aria-live="polite"</code>
      and
      <code class="dummy-code">aria-atomic="true"</code>, so we have included them explicitly, for clarity.
    </li>
    <ul>
      <li class="dummy-paragraph">
        Reference:
        <a href="https://www.w3.org/TR/wai-aria-1.2/#status" target="_blank" rel="noopener noreferrer">
          WAI-ARIA 1.2 (Status)
        </a>
      </li>
      <li class="dummy-paragraph">
        Reference:
        <a href="https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA22" target="_blank" rel="noopener noreferrer">
          WAI-ARIA Techniques 1.2 (Using role=status to present status messages)
        </a>
      </li>
    </ul>
    <li class="dummy-paragraph">
      Dismiss is a button, with
      <code class="dummy-code">type="button"</code>. Dismiss has a focus state (e.g. the user can tab to the button).
      When the dismiss button is focused, the alert closes on pressing the return key (enter on Windows). Note: You will
      need to implement an
      <code class="dummy-code">onClose</code>
      function in your app.
    </li>
    <li class="dummy-paragraph">
      We do not have a
      <code class="dummy-code">role="alertdialog"</code>
      yet, as this type of alert interrupts the user's workflow to communicate an important message and acquire a
      response.
    </li>
    <ul>
      <li class="dummy-paragraph">
        Reference:
        <a href="https://www.w3.org/TR/wai-aria-practices-1.2/#alertdialog" target="_blank" rel="noopener noreferrer">
          WAI-ARIA Techniques 1.2, Alert and Message Dialogs
        </a>
      </li>
    </ul>
  </ul>
  <p class="dummy-paragraph">Applicable WCAG success criteria</p>
  <ul>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        1.3.1: Info and Relationships
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        1.3.2: Meaningful Sequence
      </a>
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html" target="_blank" rel="noopener noreferrer">
        1.4.1: Use of Color
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        1.4.3: Contrast (Minimum)
      </a>
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/reflow.html" target="_blank" rel="noopener noreferrer">
        1.4.10: Reflow
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        1.4.11: Non-text Contrast
      </a>
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html" target="_blank" rel="noopener noreferrer">
        1.4.12: Text Spacing
      </a>
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html" target="_blank" rel="noopener noreferrer">
        2.1.1: Keyboard
      </a>
      (For Alerts with focusable elements, such as those with
      <code class="dummy-code">onDismiss</code>
      or
      <code class="dummy-code">:actions</code>.)
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/no-keyboard-trap.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        2.1.2: No Keyboard Trap
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/timing-adjustable.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        2.2.1: Timing Adjustable
      </a>
    </li>
    <ul>
      <li>For
        <strong>Alert (Toast)</strong>, which will automatically dismiss. Note: The automatic dismiss functionality will
        come from the consuming app, not the Design System.
      </li>
    </ul>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/label-in-name.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        2.5.3: Label in Name
      </a>
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/parsing.html" target="_blank" rel="noopener noreferrer">
        4.1.1: Parsing
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        4.1.2: Name, Role, Value
      </a>
    </li>
    <li>
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html"
        target="_blank"
        rel="noopener noreferrer"
      >
        4.1.3: Status Messages
      </a>
    </li>
  </ul>
</section>

<section>
  <h3 class="dummy-h3">üöß Scratch reference links</h3>
  <ul class="dummy-paragraph">
    <li>
      <a href="https://docs.google.com/document/d/1MC0MTm8-0F26s6Y-gou_RsMj6rtKS6jC-eM7rmruqLY/edit#heading=h.gjdgxs">
        WIP Alert Component Requirement Document (CRD)
      </a>
    </li>
    <li>
      <a
        href="https://www.figma.com/file/noyY6dUMDYjmySpHcMjhkN/branch/Ru0h1oqy6r7SeGxwtQ6085/HDS-Product---Components-%5BWIP%5D?node-id=4023%3A15691"
      >
        WIP Figma file
      </a>
    </li>
  </ul>
</section>