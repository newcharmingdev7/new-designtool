{{page-title "Stepper Component"}}

<h2 class="dummy-h2">Stepper Component</h2>

<DummyStepperIndicatorBanner />

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview" class="dummy-link-section">Â§</a> Overview</h3>
  <p class="dummy-paragraph">A stepper indicator helps the user maintain context and directionality when advancing
    through a multi-step flow or feature, and in certain circumstances acts as a navigational device between steps. It
    is generally assembled as part of a larger stepper pattern.</p>
  <p class="dummy-paragraph">For practical accessibility purposes, consider a stepper (the whole component) to be a list
    of items, with each step being a list item.</p>
  <p class="dummy-paragraph">
    As of this writing the HDS team publishes two separate (but related)
    <code class="dummy-code">Stepper Indicator</code>
    components that serve different hierarchical purposes.
    <ol>
      <li>The
        <code class="dummy-code">Stepper::Step::Indicator</code>
        component: used in higher-order step-based flows that contain multiple steps that a user must complete
        sequentially.</li>
      <li>The
        <code class="dummy-code">Stepper::Task::Indicator</code>
        component: used either on its own to denote smaller task-oriented flows or in combination with the
        <code class="dummy-code">Step</code>
        indicator to list multiple tasks within a step.</li>
    </ol>
  </p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">Â§</a> Component API</h3>
  <p class="dummy-banner dummy-banner--info dummy-paragraph">
    <strong>Note:</strong>
    Since the
    <code class="dummy-code">indicator</code>
    components are meant to be assembled into larger stepper item patterns, the component's interactive states should be
    tied to the larger pattern. This includes
    <code class="dummy-code">hover</code>,
    <code class="dummy-code">active</code>, and
    <code class="dummy-code">focus</code>.</p>
  <h4 class="dummy-h4" id="component-api-stepper-indicator">Stepper::Step::Indicator</h4>
  <p class="dummy-paragraph">Here is the API for the <code class="dummy-code">Step::Indicator</code> component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-stepper-indicator">
    <dt>status <code>enum</code></dt>
    <dd>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">incomplete</li>
        <li>progress</li>
        <li>processing</li>
        <li>complete</li>
      </ol>
    </dd>
    <dt>isInteractive <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">true</span></p>
      <p>By default the
        <code class="dummy-code">Indicator::Step</code>
        is not interactive and has no hover state. Usage for this variant is generally recommended for onboarding-type
        sequences or list-item steps.</p>
    </dd>
    <dt>text <code>string</code></dt>
    <dd>
      <p>Generally corresponds with the numerical value of the index of the item in an array of multiple steps.</p>
    </dd>
  </dl>
  <h4 class="dummy-h4" id="component-api-stepper-indicator-task">Stepper::Task::Indicator</h4>
  <p class="dummy-paragraph">Here is the API for the <code class="dummy-code">Task::Indicator</code> component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-stepper-indicator">
    <dt>status <code>enum</code></dt>
    <dd>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">incomplete</li>
        <li>progress</li>
        <li>processing</li>
        <li>complete</li>
      </ol>
    </dd>
    <dt>isInteractive <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">true</span></p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">Â§</a> How to use</h3>
  <p class="dummy-paragraph">The stepper indicator is used to indicate the relational step number or value, helping the
    user maintain context in a multi-step flow or sequence. It should be used in larger stepper item patterns with an
    appropriate label, description, and visual language indicating directionality.</p>
  <p class="dummy-paragraph">There are two types of indicators,
    <code class="dummy-code">step</code>
    and
    <code class="dummy-code">task</code>
    which can be used in conjunction, or separately depending on hierarchical needs or requirements.</p>
  <h4 class="dummy-h4">Stepper::Step::Indicator</h4>
  <h5 class="dummy-h5">Basic use</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" />
  <h5 class="dummy-h5">Adding interactivity</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" @isInteractive={{true}} />
  <h5 class="dummy-h5">Indicating status</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="progress" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="progress" @isInteractive={{true}} />
  <h5 class="dummy-h5">Indicating processing</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="processing" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="processing" @isInteractive={{true}} />
  <h5 class="dummy-h5">Rendering a complete step</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="complete" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="complete" @isInteractive={{true}} />
  <h4 class="dummy-h4">Stepper::Task::Indicator</h4>
  <h5 class="dummy-h5">Basic use</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="incomplete" />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="incomplete" />
  <h5 class="dummy-h5">Adding interactivity</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="incomplete" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="incomplete" @isInteractive={{true}} />
  <h5 class="dummy-h5">Indicating status</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="progress" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="progress" @isInteractive={{true}} />
  <h5 class="dummy-h5">Indicating processing</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="processing" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="processing" @isInteractive={{true}} />
  <h5 class="dummy-h5">Rendering a complete task</h5>
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="complete" @isInteractive={{true}} />
    '
  />
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="complete" @isInteractive={{true}} />
</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">Â§</a>
    Design guidelines</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>

  {{! UNCOMMENT THIS BLOCK (once the link and/or the image are available) }}
  {{!
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a href="[ADD THE LINK TO THE FIGMA FILE/PAGE HERE!]" target="_blank" rel="noopener noreferrer">Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/stepper-stepper-indicator-design-usage.png" alt="" role="none" />
  </div>
  }}
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">Â§</a> Accessibility</h3>
  <p class="dummy-paragraph">The
    <code class="dummy-code">Stepper Indicator</code>
    components are not WCAG-conformant on their own. In order to meet conformance requirements, the following steps must
    be taken:</p>
  <ol class="dummy-list">
    <li>They must be wrapped in a <code class="dummy-code">div</code> element with the role of list applied</li>
    <li>They must be given a meaningful name. The desired outcome: if there were two steppers on the same page, each
      step should have a uniquely meaningful name so that the user can differentiate.</li>
  </ol>
  <h4 class="dummy-h4">Applicable WCAG Success Criteria (Reference)</h4>
  <p class="dummy-paragraph">Once the Stepper is completely composed, authors should ensure that the following WCAG
    Success Criteria are met:</p>
  <ul class="dummy-list">
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships.html"
        rel="noopener noreferrer"
        target="_blank"
      >1.3.1: Info and Relationships:</a>
      Information, structure, and relationships conveyed through presentation can be programmatically determined or are
      available in text.</li>
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html"
        rel="noopener noreferrer"
        target="_blank"
      >1.4.1: Use of Color:</a>
      Color is not used as the only visual means of conveying information, indicating an action, prompting a response,
      or distinguishing a visual element.</li>
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html"
        rel="noopener noreferrer"
        target="_blank"
      >1.4.11: Non-Text Contrast:</a>
      The visual presentation of the user interface components and graphical objects have a contrast ratio of at least
      3:1 against adjacent color(s).
    </li>
    <li>
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/keyboard" rel="noopener noreferrer" target="_blank">2.1.1:
        Timing Adjustable:</a>
      For each time limit that is set by the content, at least one of the following is true:
      <ul class="dummy-list">
        <li>Turn off: The user is allowed to turn off the time limit before encountering it; or</li>
        <li>Adjust: The user is allowed to adjust the time limit before encountering it over a wide range that is at
          least ten times the length of the default setting; orExtend: The user is warned before time expires and given
          at least 20 seconds to extend the time limit with a simple action (for example, "press the space bar"), and
          the user is allowed to extend the time limit at least ten times; or</li>
        <li>Real-time Exception: The time limit is a required part of a real-time event (for example, an auction), and
          no alternative to the time limit is possible; or</li>
        <li>Essential Exception: The time limit is essential and extending it would invalidate the activity; or</li>
        <li>20 Hour Exception: The time limit is longer than 20 hours.</li>
      </ul>
    </li>
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships.html"
        rel="noopener noreferrer"
        target="_blank"
      >2.2.2: Pause, Stop, Hide:</a>
      For moving, blinking, scrolling, or auto-updating information, all of the following are true:
      <ul class="dummy-list">
        <li><strong>Moving, blinking, scrolling:</strong>
          For any moving, blinking, or scrolling information that (1) starts automatically, (2) lasts more than five
          seconds, and (3) is presented in parallel with other content, there is a mechanism for the user to pause,
          stop, or hide it unless the movement, blinking, or scrolling is part of an activity where it is essential; and</li>
        <li><strong>Auto-updating:</strong>
          For any auto-updating information that (1) starts automatically and (2) is presented in parallel with other
          content, there is a mechanism for the user to pause, stop, or hide it or to control the frequency of the
          update unless the auto-updating is part of an activity where it is essential.</li>
      </ul>
    </li>
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/focus-visible"
        rel="noopener noreferrer"
        target="_blank"
      >2.4.7: Focus Visible:</a>
      Any keyboard operable user interface has a mode of operation where the keyboard focus indicator is visible.</li>
    <li><a
        href="https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions.html"
        rel="noopener noreferrer"
        target="_blank"
      >3.3.2: Labels or Instructions:</a>
      Labels or instructions are provided when content requires user input.</li>
  </ul>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">Â§</a> Showcase</h3>
  <h4 class="dummy-h4">Status</h4>
  <h5 class="dummy-h5">Default</h5>
  <div class="dummy-stepper-indicator-grid">
    {{#each @model.STEP_STATUSES as |status|}}
      <div>
        <span class="dummy-text-small">{{capitalize status}}</span>
        <br />
        <Hds::Stepper::Step::Indicator @status={{status}} @text="1" />
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h5">Interactive</h5>
  {{#each @model.STEP_STATUSES as |status|}}
    <div class="dummy-stepper-indicator-grid">
      {{#each @model.STATES as |state|}}
        <div>
          <span class="dummy-text-small">{{capitalize status}}/{{state}}</span>
          <br />
          <Hds::Stepper::Step::Indicator
            @status={{status}}
            @text="1"
            @isInteractive={{true}}
            mock-state-value={{state}}
          />
        </div>
      {{/each}}
    </div>
  {{/each}}
  <h4 class="dummy-h4">Task</h4>
  <h5 class="dummy-h5">Default</h5>
  <div class="dummy-stepper-indicator-grid">
    {{#each @model.TASK_STATUSES as |status|}}
      <div>
        <span class="dummy-text-small">{{capitalize status}}</span>
        <br />
        <Hds::Stepper::Task::Indicator @status={{status}} @text="1" />
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h5">Interactive</h5>
  {{#each @model.TASK_STATUSES as |status|}}
    <div class="dummy-stepper-indicator-grid">
      {{#each @model.STATES as |state|}}
        <div>
          <span class="dummy-text-small">{{capitalize status}}/{{state}}</span>
          <br />
          <Hds::Stepper::Task::Indicator @status={{status}} @isInteractive={{true}} mock-state-value={{state}} />
        </div>
      {{/each}}
    </div>
  {{/each}}
</section>