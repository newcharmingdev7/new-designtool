{{page-title "Interactive"}}

<h2 class="dummy-h2">Interactive</h2>
<p class="dummy-paragraph">üöß
  <em>Notice: this component is intended for internal use for now. It may be that in the future it will exposed as
    official component of the design system but not for now. Please if you need to use it speak with the HDS team.</em></p>

<section>
  <h3 class="dummy-h3">Component API</h3>
  <p class="dummy-paragraph">Here is the API for the component:</p>
  <dl class="dummy-component-props">
    <dt>href</dt>
    <dd>
      <p>This is the URL parameter that is passed down to the
        <code>&lt;a&gt;</code>
        element.</p>
    </dd>
    <dt>route/models/model/query/current-when/replace</dt>
    <dd>
      <p>These are the parameters that are passed down as arguments to the
        <code>&lt;LinkTo&gt;</code>
        /
        <code>&lt;LinkToExternal&gt;</code>
        components.</p>
    </dd>
    <dt>isRouteExternal <code>boolean</code></dt>
    <dd>
      <p>This controls if the "LinkTo" is external to the Ember engine (<a
          href="https://ember-engines.com/docs/link-to-external"
          target="_blank"
          rel="noopener noreferrer"
        >more details here</a>) in which case it will use a
        <code>&lt;LinkToExternal&gt;</code>
        instead of a simple
        <code>&lt;LinkTo&gt;</code>
        for the @route.</p>
    </dd>
    <dt>‚Äúsplattributes‚Äù</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3">How to use</h3>

  <h4 class="dummy-h4">Basic use (&lt;button&gt;)</h4>
  <p class="dummy-paragraph">Invocation of the component would look something like this:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code="
      <Hds::Interactive>
          your content here (will be yielded)
      </Hds::Interactive>
    "
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">In this case, since no
    <code class="dummy-code">@href</code>
    or
    <code class="dummy-code">@route</code>
    argument is provided it will generate in output an HTML
    <code class="dummy-code">&lt;button&gt;</code>
    element.
  </p>
  <p class="dummy-paragraph"><em>Notice: a
      <code class="dummy-code">type="button"</code>
      HTML attribute is applied by default to the element, but this can be overwritten using the "splattributes".</em></p>

  <h4 class="dummy-h4">With "@href" parameter (&lt;a&gt;)</h4>
  <p class="dummy-paragraph">If an <code class="dummy-code">@href</code> argument is provided:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Interactive @href="https://google.com">
          your content here
      </Hds::Interactive>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">it will generate in output an HTML
    <code class="dummy-code">&lt;a&gt;</code>
    link element.
  </p>
  <p class="dummy-paragraph"><strong>üö® ATTENTION</strong>: we can't support the direct use of the
    <code class="dummy-code">href</code>
    HTML attribute because we need to rely on the
    <code class="dummy-code">@href</code>
    Ember argument to differentiate between different types of generated output.</p>
  <p class="dummy-paragraph"><em>Notice: the
      <code class="dummy-code">target="_blank"</code>
      and
      <code class="dummy-code">rel="noopener noreferrer"</code>
      HTML attributes are applied by default to the element, but these can be overwritten using the "splattributes".</em></p>

  <h4 class="dummy-h4">With "@route" parameter (&lt;LinkTo&gt;/&lt;LinkToExternal&gt;)</h4>
  <p class="dummy-paragraph">If a <code class="dummy-code">@route</code> argument is provided:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Interactive @route="list" @model="...">
          your content here
      </Hds::Interactive>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">it will generate in output a
    <code class="dummy-code">&lt;LinkTo&gt;</code>
    component.
  </p>

  <p class="dummy-paragraph">If the
    <code class="dummy-code">@route</code>
    is external to the current engine (<a
      href="https://ember-engines.com/docs/link-to-external"
      target="_blank"
      rel="noopener noreferrer"
    >more details here</a>), you need to provide an extra
    <code class="dummy-code">@isRouteExternal</code>
    parameter:</p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Interactive @route="list" @isRouteExternal=\{{true}} @model="..." >
          your content here
      </Hds::Interactive>
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">and it will generate in output a
    <code class="dummy-code">&lt;LinkToExternal&gt;</code>
    component.
  </p>

  <p class="dummy-paragraph"><em>Notice: all the standard arguments for the
      <code class="dummy-code">&lt;LinkTo/LinkToExternal&gt;</code>
      components are supported (eg.
      <code class="dummy-code">models/model/query/current-when/replace</code>).</em></p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3">Showcase</h3>

  <h4 class="dummy-h4">Generated elements</h4>

  <div class="dummy-interactive-sample">
    <p class="dummy-paragraph">
      <code class="dummy-code">&lt;button&gt;</code>
      <span class="dummy-text-small">(with no @route or @href provided / default)</span>
    </p>
    <Hds::Interactive>This is a button (default)</Hds::Interactive>
  </div>

  <div class="dummy-interactive-sample">
    <p class="dummy-paragraph">
      <code class="dummy-code">&lt;a&gt;</code>
      <span class="dummy-text-small">(with @href argument)</span>
    </p>
    <Hds::Interactive @href="#">This is a normal <code>&lt;a&gt;</code> link</Hds::Interactive>
  </div>

  <div class="dummy-interactive-sample">
    <p class="dummy-paragraph">
      <code class="dummy-code">&lt;LinkTo&gt;</code>
      <span class="dummy-text-small">(with @route argument but no @isRouteExternal)</span>
    </p>
    <Hds::Interactive @route="index">This is a <code>&lt;LinkTo&gt;</code> link</Hds::Interactive>
  </div>

  <div class="dummy-interactive-sample">
    <p class="dummy-paragraph">
      <code class="dummy-code">&lt;LinkToExternal&gt;</code>
      <span class="dummy-text-small">(with @route argument and @isRouteExternal set to true)</span>
    </p>
    {{!-- <Hds::Interactive @route="index" @isRouteExternal={{true}}>This is a <code>&lt;LinkToExternal&gt;</code> link</Hds::Interactive> --}}
    <pre>‚ö†Ô∏è We can't render this component in this application (it will work only on Ember engines).</pre>
  </div>

</section>